2025-03-29 10:12:43 | INFO  | HV000001: Hibernate Validator 8.0.2.Final
2025-03-29 10:12:43 | INFO  | Starting ApiGatewayApplication using Java 23.0.2 with PID 17560 (D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE\API-gateway\target\classes started by hiepg in D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE)
2025-03-29 10:12:43 | DEBUG | Running with Spring Boot v3.4.3, Spring v6.2.3
2025-03-29 10:12:43 | INFO  | The following 1 profile is active: "local"
2025-03-29 10:12:46 | TRACE | Condition GatewayAutoConfiguration.OnVerboseDisabledCondition on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration#gatewayLegacyControllerEndpoint did not match due to NoneNestedConditions 1 matched 0 did not; NestedCondition on GatewayAutoConfiguration.OnVerboseDisabledCondition.VerboseDisabled @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#routingFilter matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#nettyWriteResponseFilter matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyWebSocketClient matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyRequestUpgradeStrategy matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeCachedBodyFilter matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#routeToRequestUrlFilter matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardRoutingFilter matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardPathFilter matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#webSocketService matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#websocketRoutingFilter matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightCalculatorWebFilter matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#afterRoutePredicateFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#beforeRoutePredicateFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#betweenRoutePredicateFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cookieRoutePredicateFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#headerRoutePredicateFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#hostRoutePredicateFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#methodRoutePredicateFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#pathRoutePredicateFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#queryRoutePredicateFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#readBodyPredicateFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightRoutePredicateFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeadersIfNotPresentGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#redirectToGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeJsonAttributesResponseBodyGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#principalNameKeyResolver matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestRateLimiterGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#retryGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setPathGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setStatusGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched
2025-03-29 10:12:46 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteRequestParameterGatewayFilterFactory matched
2025-03-29 10:12:47 | INFO  | Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-29 10:12:47 | INFO  | Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-29 10:12:47 | INFO  | Finished Spring Data repository scanning in 40 ms. Found 0 Redis repository interfaces.
2025-03-29 10:12:47 | INFO  | BeanFactory id=e830402f-197c-3e7d-a5a0-729a5b37f1d9
2025-03-29 10:12:49 | DEBUG | Starting with netty's non-blocking DNS resolver library
2025-03-29 10:12:49 | DEBUG | Starting without optional kqueue library
2025-03-29 10:12:49 | DEBUG | Starting without optional io_uring library
2025-03-29 10:12:49 | DEBUG | Starting without optional epoll library
2025-03-29 10:12:49 | DEBUG | -Dio.netty.eventLoopThreads: 4
2025-03-29 10:12:49 | DEBUG | Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-03-29 10:12:49 | DEBUG | Starting with JFR support
2025-03-29 10:12:50 | INFO  | 

Using generated security password: 20f57073-d02d-4821-be44-a97732185e77

2025-03-29 10:12:52 | DEBUG | Routes supplied from Gateway Properties: [RouteDefinition{id='user-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/users/**}}], filters=[], uri=http://localhost:8081, order=0, metadata={}, enabled=true}, RouteDefinition{id='wallet-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/wallets/**}}], filters=[], uri=http://localhost:8082, order=0, metadata={}, enabled=true}, RouteDefinition{id='account-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/accounts/**}}], filters=[], uri=http://account-service:8083, order=0, metadata={}, enabled=true}, RouteDefinition{id='trading-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/trading/**}}], filters=[], uri=http://trading-service:8084, order=0, metadata={}, enabled=true}]
2025-03-29 10:12:52 | INFO  | Loaded RoutePredicateFactory [After]
2025-03-29 10:12:52 | INFO  | Loaded RoutePredicateFactory [Before]
2025-03-29 10:12:52 | INFO  | Loaded RoutePredicateFactory [Between]
2025-03-29 10:12:52 | INFO  | Loaded RoutePredicateFactory [Cookie]
2025-03-29 10:12:52 | INFO  | Loaded RoutePredicateFactory [Header]
2025-03-29 10:12:52 | INFO  | Loaded RoutePredicateFactory [Host]
2025-03-29 10:12:52 | INFO  | Loaded RoutePredicateFactory [Method]
2025-03-29 10:12:52 | INFO  | Loaded RoutePredicateFactory [Path]
2025-03-29 10:12:52 | INFO  | Loaded RoutePredicateFactory [Query]
2025-03-29 10:12:52 | INFO  | Loaded RoutePredicateFactory [ReadBody]
2025-03-29 10:12:52 | INFO  | Loaded RoutePredicateFactory [RemoteAddr]
2025-03-29 10:12:52 | INFO  | Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-03-29 10:12:52 | INFO  | Loaded RoutePredicateFactory [Weight]
2025-03-29 10:12:52 | INFO  | Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-03-29 10:12:53 | INFO  | Exposing 2 endpoints beneath base path '/actuator'
2025-03-29 10:12:54 | INFO  | Netty started on port 8080 (http)
2025-03-29 10:12:54 | DEBUG | Starting RedisMessageListenerContainer...
2025-03-29 10:12:54 | DEBUG | Postpone listening for Redis messages until actual listeners are added
2025-03-29 10:12:54 | DEBUG | RouteDefinition user-service-route applying {_genkey_0=/users/**} to Path
2025-03-29 10:12:54 | DEBUG | RouteDefinition matched: user-service-route
2025-03-29 10:12:54 | DEBUG | RouteDefinition wallet-service-route applying {_genkey_0=/wallets/**} to Path
2025-03-29 10:12:54 | DEBUG | RouteDefinition matched: wallet-service-route
2025-03-29 10:12:54 | DEBUG | RouteDefinition account-service-route applying {_genkey_0=/accounts/**} to Path
2025-03-29 10:12:54 | DEBUG | RouteDefinition matched: account-service-route
2025-03-29 10:12:54 | DEBUG | RouteDefinition trading-service-route applying {_genkey_0=/trading/**} to Path
2025-03-29 10:12:54 | DEBUG | RouteDefinition matched: trading-service-route
2025-03-29 10:12:54 | DEBUG | New routes count: 4
2025-03-29 10:12:54 | INFO  | Started ApiGatewayApplication in 12.47 seconds (process running for 21.095)
2025-03-29 11:01:26 | DEBUG | Stopped RedisMessageListenerContainer
2025-03-29 11:01:26 | INFO  | Commencing graceful shutdown. Waiting for active requests to complete
2025-03-29 11:01:26 | INFO  | Graceful shutdown complete
2025-03-29 11:01:26 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-03-29 11:01:26 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-03-29 11:01:26 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-03-29 11:01:41 | INFO  | HV000001: Hibernate Validator 8.0.2.Final
2025-03-29 11:01:41 | INFO  | Starting ApiGatewayApplication using Java 23.0.2 with PID 20248 (D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE\API-gateway\target\classes started by hiepg in D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE)
2025-03-29 11:01:41 | DEBUG | Running with Spring Boot v3.4.3, Spring v6.2.3
2025-03-29 11:01:41 | INFO  | The following 1 profile is active: "local"
2025-03-29 11:01:43 | TRACE | Condition GatewayAutoConfiguration.OnVerboseDisabledCondition on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration#gatewayLegacyControllerEndpoint did not match due to NoneNestedConditions 1 matched 0 did not; NestedCondition on GatewayAutoConfiguration.OnVerboseDisabledCondition.VerboseDisabled @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#routingFilter matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#nettyWriteResponseFilter matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyWebSocketClient matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyRequestUpgradeStrategy matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeCachedBodyFilter matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#routeToRequestUrlFilter matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardRoutingFilter matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardPathFilter matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#webSocketService matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#websocketRoutingFilter matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightCalculatorWebFilter matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#afterRoutePredicateFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#beforeRoutePredicateFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#betweenRoutePredicateFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cookieRoutePredicateFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#headerRoutePredicateFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#hostRoutePredicateFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#methodRoutePredicateFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#pathRoutePredicateFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#queryRoutePredicateFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#readBodyPredicateFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightRoutePredicateFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeadersIfNotPresentGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#redirectToGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeJsonAttributesResponseBodyGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#principalNameKeyResolver matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestRateLimiterGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#retryGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setPathGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setStatusGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched
2025-03-29 11:01:43 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteRequestParameterGatewayFilterFactory matched
2025-03-29 11:01:44 | INFO  | Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-29 11:01:44 | INFO  | Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-29 11:01:44 | INFO  | Finished Spring Data repository scanning in 36 ms. Found 0 Redis repository interfaces.
2025-03-29 11:01:44 | INFO  | BeanFactory id=e830402f-197c-3e7d-a5a0-729a5b37f1d9
2025-03-29 11:01:45 | DEBUG | Starting with netty's non-blocking DNS resolver library
2025-03-29 11:01:46 | DEBUG | Starting without optional kqueue library
2025-03-29 11:01:46 | DEBUG | Starting without optional io_uring library
2025-03-29 11:01:46 | DEBUG | Starting without optional epoll library
2025-03-29 11:01:46 | DEBUG | -Dio.netty.eventLoopThreads: 4
2025-03-29 11:01:46 | DEBUG | Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-03-29 11:01:46 | DEBUG | Starting with JFR support
2025-03-29 11:01:46 | INFO  | 

Using generated security password: cfa45a15-1cea-4748-a039-ee5a624f6ec6

2025-03-29 11:01:48 | DEBUG | Routes supplied from Gateway Properties: [RouteDefinition{id='user-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/users/**}}], filters=[], uri=http://localhost:8081, order=0, metadata={}, enabled=true}, RouteDefinition{id='wallet-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/wallets/**}}], filters=[], uri=http://localhost:8082, order=0, metadata={}, enabled=true}, RouteDefinition{id='account-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/accounts/**}}], filters=[], uri=http://account-service:8083, order=0, metadata={}, enabled=true}, RouteDefinition{id='trading-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/trading/**}}], filters=[], uri=http://trading-service:8084, order=0, metadata={}, enabled=true}]
2025-03-29 11:01:48 | INFO  | Loaded RoutePredicateFactory [After]
2025-03-29 11:01:48 | INFO  | Loaded RoutePredicateFactory [Before]
2025-03-29 11:01:48 | INFO  | Loaded RoutePredicateFactory [Between]
2025-03-29 11:01:48 | INFO  | Loaded RoutePredicateFactory [Cookie]
2025-03-29 11:01:48 | INFO  | Loaded RoutePredicateFactory [Header]
2025-03-29 11:01:48 | INFO  | Loaded RoutePredicateFactory [Host]
2025-03-29 11:01:48 | INFO  | Loaded RoutePredicateFactory [Method]
2025-03-29 11:01:48 | INFO  | Loaded RoutePredicateFactory [Path]
2025-03-29 11:01:48 | INFO  | Loaded RoutePredicateFactory [Query]
2025-03-29 11:01:48 | INFO  | Loaded RoutePredicateFactory [ReadBody]
2025-03-29 11:01:48 | INFO  | Loaded RoutePredicateFactory [RemoteAddr]
2025-03-29 11:01:48 | INFO  | Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-03-29 11:01:48 | INFO  | Loaded RoutePredicateFactory [Weight]
2025-03-29 11:01:48 | INFO  | Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-03-29 11:01:49 | INFO  | Exposing 2 endpoints beneath base path '/actuator'
2025-03-29 11:01:50 | INFO  | Netty started on port 8080 (http)
2025-03-29 11:01:50 | DEBUG | Starting RedisMessageListenerContainer...
2025-03-29 11:01:50 | DEBUG | Postpone listening for Redis messages until actual listeners are added
2025-03-29 11:01:50 | DEBUG | RouteDefinition user-service-route applying {_genkey_0=/users/**} to Path
2025-03-29 11:01:50 | DEBUG | RouteDefinition matched: user-service-route
2025-03-29 11:01:50 | DEBUG | RouteDefinition wallet-service-route applying {_genkey_0=/wallets/**} to Path
2025-03-29 11:01:50 | DEBUG | RouteDefinition matched: wallet-service-route
2025-03-29 11:01:50 | DEBUG | RouteDefinition account-service-route applying {_genkey_0=/accounts/**} to Path
2025-03-29 11:01:50 | DEBUG | RouteDefinition matched: account-service-route
2025-03-29 11:01:50 | DEBUG | RouteDefinition trading-service-route applying {_genkey_0=/trading/**} to Path
2025-03-29 11:01:50 | DEBUG | RouteDefinition matched: trading-service-route
2025-03-29 11:01:50 | DEBUG | New routes count: 4
2025-03-29 11:01:50 | INFO  | Started ApiGatewayApplication in 10.6 seconds (process running for 17.666)
2025-03-29 11:02:53 | DEBUG | Stopped RedisMessageListenerContainer
2025-03-29 11:02:53 | INFO  | Commencing graceful shutdown. Waiting for active requests to complete
2025-03-29 11:02:53 | INFO  | Graceful shutdown complete
2025-03-29 11:02:53 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-03-29 11:02:53 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-03-29 11:02:53 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-03-29 11:19:00 | INFO  | HV000001: Hibernate Validator 8.0.2.Final
2025-03-29 11:19:00 | INFO  | Starting ApiGatewayApplication using Java 23.0.2 with PID 23884 (D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE\API-gateway\target\classes started by hiepg in D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE)
2025-03-29 11:19:00 | DEBUG | Running with Spring Boot v3.4.3, Spring v6.2.3
2025-03-29 11:19:00 | INFO  | The following 1 profile is active: "local"
2025-03-29 11:19:04 | TRACE | Condition GatewayAutoConfiguration.OnVerboseDisabledCondition on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration#gatewayLegacyControllerEndpoint did not match due to NoneNestedConditions 1 matched 0 did not; NestedCondition on GatewayAutoConfiguration.OnVerboseDisabledCondition.VerboseDisabled @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#routingFilter matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#nettyWriteResponseFilter matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyWebSocketClient matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyRequestUpgradeStrategy matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeCachedBodyFilter matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#routeToRequestUrlFilter matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardRoutingFilter matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardPathFilter matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#webSocketService matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#websocketRoutingFilter matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightCalculatorWebFilter matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#afterRoutePredicateFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#beforeRoutePredicateFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#betweenRoutePredicateFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cookieRoutePredicateFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#headerRoutePredicateFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#hostRoutePredicateFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#methodRoutePredicateFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#pathRoutePredicateFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#queryRoutePredicateFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#readBodyPredicateFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightRoutePredicateFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeadersIfNotPresentGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#redirectToGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeJsonAttributesResponseBodyGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#principalNameKeyResolver matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestRateLimiterGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#retryGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setPathGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setStatusGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched
2025-03-29 11:19:04 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteRequestParameterGatewayFilterFactory matched
2025-03-29 11:19:05 | INFO  | Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-29 11:19:05 | INFO  | Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-29 11:19:05 | INFO  | Finished Spring Data repository scanning in 36 ms. Found 0 Redis repository interfaces.
2025-03-29 11:19:06 | INFO  | BeanFactory id=e830402f-197c-3e7d-a5a0-729a5b37f1d9
2025-03-29 11:19:07 | DEBUG | Starting with netty's non-blocking DNS resolver library
2025-03-29 11:19:07 | DEBUG | Starting without optional kqueue library
2025-03-29 11:19:07 | DEBUG | Starting without optional io_uring library
2025-03-29 11:19:07 | DEBUG | Starting without optional epoll library
2025-03-29 11:19:07 | DEBUG | -Dio.netty.eventLoopThreads: 4
2025-03-29 11:19:07 | DEBUG | Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-03-29 11:19:08 | DEBUG | Starting with JFR support
2025-03-29 11:19:08 | INFO  | 

Using generated security password: 8714f0f8-f0f1-4322-b84a-b7f9cfd819d3

2025-03-29 11:19:10 | DEBUG | Routes supplied from Gateway Properties: [RouteDefinition{id='user-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/users/**}}], filters=[], uri=http://localhost:8081, order=0, metadata={}, enabled=true}, RouteDefinition{id='wallet-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/wallets/**}}], filters=[], uri=http://localhost:8082, order=0, metadata={}, enabled=true}, RouteDefinition{id='account-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/accounts/**}}], filters=[], uri=http://account-service:8083, order=0, metadata={}, enabled=true}, RouteDefinition{id='trading-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/trading/**}}], filters=[], uri=http://trading-service:8084, order=0, metadata={}, enabled=true}]
2025-03-29 11:19:10 | INFO  | Loaded RoutePredicateFactory [After]
2025-03-29 11:19:10 | INFO  | Loaded RoutePredicateFactory [Before]
2025-03-29 11:19:10 | INFO  | Loaded RoutePredicateFactory [Between]
2025-03-29 11:19:10 | INFO  | Loaded RoutePredicateFactory [Cookie]
2025-03-29 11:19:10 | INFO  | Loaded RoutePredicateFactory [Header]
2025-03-29 11:19:10 | INFO  | Loaded RoutePredicateFactory [Host]
2025-03-29 11:19:10 | INFO  | Loaded RoutePredicateFactory [Method]
2025-03-29 11:19:10 | INFO  | Loaded RoutePredicateFactory [Path]
2025-03-29 11:19:10 | INFO  | Loaded RoutePredicateFactory [Query]
2025-03-29 11:19:10 | INFO  | Loaded RoutePredicateFactory [ReadBody]
2025-03-29 11:19:10 | INFO  | Loaded RoutePredicateFactory [RemoteAddr]
2025-03-29 11:19:10 | INFO  | Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-03-29 11:19:10 | INFO  | Loaded RoutePredicateFactory [Weight]
2025-03-29 11:19:10 | INFO  | Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-03-29 11:19:11 | INFO  | Exposing 2 endpoints beneath base path '/actuator'
2025-03-29 11:19:12 | INFO  | Netty started on port 8080 (http)
2025-03-29 11:19:12 | DEBUG | Starting RedisMessageListenerContainer...
2025-03-29 11:19:12 | DEBUG | Postpone listening for Redis messages until actual listeners are added
2025-03-29 11:19:12 | DEBUG | RouteDefinition user-service-route applying {_genkey_0=/users/**} to Path
2025-03-29 11:19:12 | DEBUG | RouteDefinition matched: user-service-route
2025-03-29 11:19:12 | DEBUG | RouteDefinition wallet-service-route applying {_genkey_0=/wallets/**} to Path
2025-03-29 11:19:12 | DEBUG | RouteDefinition matched: wallet-service-route
2025-03-29 11:19:12 | DEBUG | RouteDefinition account-service-route applying {_genkey_0=/accounts/**} to Path
2025-03-29 11:19:12 | DEBUG | RouteDefinition matched: account-service-route
2025-03-29 11:19:12 | DEBUG | RouteDefinition trading-service-route applying {_genkey_0=/trading/**} to Path
2025-03-29 11:19:12 | DEBUG | RouteDefinition matched: trading-service-route
2025-03-29 11:19:12 | DEBUG | New routes count: 4
2025-03-29 11:19:12 | INFO  | Started ApiGatewayApplication in 14.443 seconds (process running for 23.721)
2025-03-29 11:20:18 | TRACE | Weights attr: {}
2025-03-29 11:20:18 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 11:20:19 | DEBUG | Allocating executor io.netty.channel.nio.NioEventLoopGroup
2025-03-29 11:20:19 | DEBUG | Creating executor io.netty.channel.nio.NioEventLoopGroup
2025-03-29 11:20:19 | DEBUG | Adding reference to io.netty.channel.nio.NioEventLoopGroup@13dd7fdb, existing ref count 0
2025-03-29 11:20:19 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 11:20:19 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-03-29 11:20:19 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 11:20:19 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 11:20:19 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-03-29 11:20:19 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 11:20:19 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 11:20:19 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-03-29 11:20:19 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 11:20:19 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 11:20:19 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-03-29 11:20:19 | DEBUG | [channel=0x463f0a98, [id: 0xf1557e3b] (inactive), epid=0x2, chid=0x2] channelRegistered()
2025-03-29 11:20:19 | DEBUG | [channel=0x5f7aa1a8, [id: 0x300fc60e] (inactive), epid=0x1, chid=0x1] channelRegistered()
2025-03-29 11:20:19 | DEBUG | [channel=0xca0ff043, [id: 0x26c441cc] (inactive), epid=0x3, chid=0x3] channelRegistered()
2025-03-29 11:20:19 | DEBUG | [channel=0xf3f02d83, [id: 0xb461b2c2] (inactive), epid=0x4, chid=0x4] channelRegistered()
2025-03-29 11:20:20 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 11:20:20 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 11:20:20 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 11:20:20 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 11:20:20 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:20:20 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:20:20 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:20:20 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:20:20 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Received: 705 bytes, 1 commands in the stack
2025-03-29 11:20:20 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Received: 705 bytes, 1 commands in the stack
2025-03-29 11:20:20 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Stack contains: 1 commands
2025-03-29 11:20:20 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 1 commands
2025-03-29 11:20:20 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 705 bytes, 1 commands in the stack
2025-03-29 11:20:20 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-03-29 11:20:20 | DEBUG | Decode done, empty stack: true
2025-03-29 11:20:20 | DEBUG | Decode done, empty stack: true
2025-03-29 11:20:20 | DEBUG | Decode done, empty stack: true
2025-03-29 11:20:20 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Received: 705 bytes, 1 commands in the stack
2025-03-29 11:20:20 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Stack contains: 1 commands
2025-03-29 11:20:20 | DEBUG | Decode done, empty stack: true
2025-03-29 11:20:20 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 11:20:20 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 11:20:20 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 11:20:20 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 11:20:20 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-03-29 11:20:20 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-03-29 11:20:20 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:20:20 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:20:20 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-03-29 11:20:20 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:20:20 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:20:20 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:20:20 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:20:20 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-03-29 11:20:20 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:20:20 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:20:20 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Received: 10 bytes, 2 commands in the stack
2025-03-29 11:20:20 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Received: 10 bytes, 2 commands in the stack
2025-03-29 11:20:20 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 10 bytes, 2 commands in the stack
2025-03-29 11:20:20 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 2 commands
2025-03-29 11:20:20 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Stack contains: 2 commands
2025-03-29 11:20:20 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 2 commands
2025-03-29 11:20:20 | DEBUG | Decode done, empty stack: true
2025-03-29 11:20:20 | DEBUG | Decode done, empty stack: true
2025-03-29 11:20:20 | DEBUG | Decode done, empty stack: true
2025-03-29 11:20:20 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Received: 10 bytes, 2 commands in the stack
2025-03-29 11:20:20 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Stack contains: 2 commands
2025-03-29 11:20:20 | DEBUG | Decode done, empty stack: true
2025-03-29 11:20:20 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 11:20:20 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 11:20:20 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Stack contains: 1 commands
2025-03-29 11:20:20 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 11:20:20 | DEBUG | Decode done, empty stack: true
2025-03-29 11:20:20 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 11:20:20 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Stack contains: 1 commands
2025-03-29 11:20:20 | DEBUG | Decode done, empty stack: true
2025-03-29 11:20:20 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] channelActive()
2025-03-29 11:20:20 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 11:20:20 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] channelActive()
2025-03-29 11:20:20 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-03-29 11:20:20 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 11:20:20 | DEBUG | Decode done, empty stack: true
2025-03-29 11:20:20 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 1 commands
2025-03-29 11:20:20 | DEBUG | Decode done, empty stack: true
2025-03-29 11:20:20 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 11:20:20 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 11:20:20 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-03-29 11:20:20 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive()
2025-03-29 11:20:20 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-03-29 11:20:20 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-03-29 11:20:20 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] activating endpoint
2025-03-29 11:20:20 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-03-29 11:20:20 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-03-29 11:20:20 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] flushCommands()
2025-03-29 11:20:20 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelActive()
2025-03-29 11:20:20 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] activating endpoint
2025-03-29 11:20:20 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] flushCommands()
2025-03-29 11:20:20 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-03-29 11:20:20 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] activating endpoint
2025-03-29 11:20:20 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] flushCommands()
2025-03-29 11:20:20 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-03-29 11:20:20 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] flushCommands() Flushing 0 commands
2025-03-29 11:20:20 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] flushCommands() Flushing 0 commands
2025-03-29 11:20:20 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] flushCommands() Flushing 0 commands
2025-03-29 11:20:20 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-03-29 11:20:20 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] channelActive() done
2025-03-29 11:20:20 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-03-29 11:20:20 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694: Success
2025-03-29 11:20:20 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] channelActive() done
2025-03-29 11:20:20 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694: Success
2025-03-29 11:20:20 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-03-29 11:20:20 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelActive() done
2025-03-29 11:20:20 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694: Success
2025-03-29 11:20:20 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-03-29 11:20:20 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive() done
2025-03-29 11:20:20 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694: Success
2025-03-29 11:20:20 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 11:20:20 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 11:20:20 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-03-29 11:20:20 | DEBUG | [channel=0x86c854a4, [id: 0xbe7861f7] (inactive), epid=0x5, chid=0x5] channelRegistered()
2025-03-29 11:20:20 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:20:20 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:20:20 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 11:20:20 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:20:20 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] write() done
2025-03-29 11:20:21 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 11:20:21 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:20:21 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Received: 4 bytes, 1 commands in the stack
2025-03-29 11:20:21 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Stack contains: 1 commands
2025-03-29 11:20:21 | DEBUG | Decode done, empty stack: true
2025-03-29 11:20:21 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Completing command LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 11:20:21 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-03-29 11:20:21 | DEBUG | Route matched: user-service-route
2025-03-29 11:20:21 | DEBUG | Mapping [Exchange: POST http://localhost:8080/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 11:20:21 | DEBUG | [e03342fa-1] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 11:20:21 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 11:20:21 | TRACE | RouteToRequestUrlFilter start
2025-03-29 11:20:21 | DEBUG | Will instrument the HTTP request headers [X-Forwarded-For:"203.0.113.50,0:0:0:0:0:0:0:1", Content-Type:"application/json", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"8e816401-d277-429f-805d-4017e5fe3cb1", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"69", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56449"", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 11:20:21 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0021876, duration(nanos)=2187600.0, startTimeNanos=747520853587200}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@27813ae6'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6a5a2b63} created for the request. New headers are [X-Forwarded-For:"203.0.113.50,0:0:0:0:0:0:0:1", Content-Type:"application/json", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"8e816401-d277-429f-805d-4017e5fe3cb1", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"69", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56449"", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 11:20:21 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Received: 705 bytes, 1 commands in the stack
2025-03-29 11:20:21 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Stack contains: 1 commands
2025-03-29 11:20:21 | DEBUG | Decode done, empty stack: true
2025-03-29 11:20:21 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 11:20:21 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-03-29 11:20:21 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:20:21 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:20:21 | TRACE | outbound route: af192ce9, inbound: [e03342fa-1] 
2025-03-29 11:20:21 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Received: 10 bytes, 2 commands in the stack
2025-03-29 11:20:21 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Stack contains: 2 commands
2025-03-29 11:20:21 | DEBUG | Decode done, empty stack: true
2025-03-29 11:20:21 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 11:20:21 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Stack contains: 1 commands
2025-03-29 11:20:21 | DEBUG | Decode done, empty stack: true
2025-03-29 11:20:21 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 11:20:21 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] channelActive()
2025-03-29 11:20:21 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-03-29 11:20:21 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] activating endpoint
2025-03-29 11:20:21 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] flushCommands()
2025-03-29 11:20:21 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] flushCommands() Flushing 0 commands
2025-03-29 11:20:21 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-03-29 11:20:21 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] channelActive() done
2025-03-29 11:20:21 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694: Success
2025-03-29 11:20:23 | DEBUG | Will instrument the response
2025-03-29 11:20:23 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.872367, duration(nanos)=1.872367E9, startTimeNanos=747520853587200}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@27813ae6'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6a5a2b63}
2025-03-29 11:20:23 | TRACE | NettyWriteResponseFilter start inbound: af192ce9, outbound: [e03342fa-1] 
2025-03-29 11:20:23 | DEBUG | dispatching command SubscriptionCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:20:23 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command SubscriptionCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:20:23 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-03-29 11:20:23 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, SubscriptionCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 11:20:23 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:20:23 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-03-29 11:20:23 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2025-03-29 11:20:23 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-03-29 11:20:23 | DEBUG | Decode done, empty stack: true
2025-03-29 11:20:23 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=SET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 11:20:38 | TRACE | Weights attr: {}
2025-03-29 11:20:38 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:20:38 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:20:38 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 11:20:38 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] write() done
2025-03-29 11:20:38 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:20:38 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Received: 4 bytes, 1 commands in the stack
2025-03-29 11:20:38 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Stack contains: 1 commands
2025-03-29 11:20:38 | DEBUG | Decode done, empty stack: true
2025-03-29 11:20:38 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Completing command LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 11:20:38 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/me/profile/enhanced"
2025-03-29 11:20:38 | DEBUG | Route matched: user-service-route
2025-03-29 11:20:38 | DEBUG | Mapping [Exchange: GET http://localhost:8080/users/api/v1/me/profile/enhanced] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 11:20:38 | DEBUG | [e03342fa-2] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 11:20:38 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 11:20:38 | TRACE | RouteToRequestUrlFilter start
2025-03-29 11:20:38 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"a448b755-50bc-4f62-9143-22f454656e8b", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56449"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 11:20:38 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.542E-4, duration(nanos)=154200.0, startTimeNanos=747538583157300}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@480033de'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@17cc244d} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"a448b755-50bc-4f62-9143-22f454656e8b", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56449"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 11:20:38 | TRACE | outbound route: af192ce9, inbound: [e03342fa-2] 
2025-03-29 11:20:41 | DEBUG | Will instrument the response
2025-03-29 11:20:41 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.5939035, duration(nanos)=2.5939035E9, startTimeNanos=747538583157300}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@480033de'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@17cc244d}
2025-03-29 11:20:41 | TRACE | NettyWriteResponseFilter start inbound: af192ce9, outbound: [e03342fa-2] 
2025-03-29 11:20:41 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=INTERNAL_SERVER_ERROR)]
2025-03-29 11:45:54 | TRACE | Weights attr: {}
2025-03-29 11:45:54 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:45:54 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:45:54 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 11:45:54 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() done
2025-03-29 11:45:54 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:45:54 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Received: 4 bytes, 1 commands in the stack
2025-03-29 11:45:54 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 1 commands
2025-03-29 11:45:54 | DEBUG | Decode done, empty stack: true
2025-03-29 11:45:54 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 11:45:54 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/me/profile/enhanced"
2025-03-29 11:45:54 | DEBUG | Route matched: user-service-route
2025-03-29 11:45:54 | DEBUG | Mapping [Exchange: GET http://localhost:8080/users/api/v1/me/profile/enhanced] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 11:45:54 | DEBUG | [d2fba587-3] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 11:45:54 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 11:45:54 | TRACE | RouteToRequestUrlFilter start
2025-03-29 11:45:54 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"2a97ddb4-4cff-43b1-b39b-e7f5b45ee52b", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56614"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 11:45:54 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.789E-4, duration(nanos)=178900.0, startTimeNanos=749053930580600}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2d24f2a3'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@35a0120a} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"2a97ddb4-4cff-43b1-b39b-e7f5b45ee52b", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56614"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 11:45:54 | ERROR | Redis connection error: Connection refused: getsockopt: localhost/127.0.0.1:8081
2025-03-29 11:45:54 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/me/profile/enhanced"
2025-03-29 11:45:54 | DEBUG | Route matched: user-service-route
2025-03-29 11:45:54 | DEBUG | Mapping [Exchange: GET http://localhost:8080/users/api/v1/me/profile/enhanced] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 11:45:54 | DEBUG | [d2fba587-3] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 11:45:54 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 11:45:54 | TRACE | RouteToRequestUrlFilter start
2025-03-29 11:45:54 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-03-29 11:45:54 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-03-29 11:49:51 | TRACE | Weights attr: {}
2025-03-29 11:49:51 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:49:51 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:49:51 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 11:49:51 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] write() done
2025-03-29 11:49:51 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:49:51 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Received: 4 bytes, 1 commands in the stack
2025-03-29 11:49:51 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Stack contains: 1 commands
2025-03-29 11:49:51 | DEBUG | Decode done, empty stack: true
2025-03-29 11:49:51 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Completing command LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 11:49:51 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/me/profile/enhanced"
2025-03-29 11:49:51 | DEBUG | Route matched: user-service-route
2025-03-29 11:49:51 | DEBUG | Mapping [Exchange: GET http://localhost:8080/users/api/v1/me/profile/enhanced] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 11:49:51 | DEBUG | [f4878e39-4] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 11:49:51 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 11:49:51 | TRACE | RouteToRequestUrlFilter start
2025-03-29 11:49:51 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"10ee5133-9b53-40f8-a897-bd25166fe0c2", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56662"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 11:49:51 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.853E-4, duration(nanos)=185300.0, startTimeNanos=749291350528400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6fb5be49'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3cdf6dab} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"10ee5133-9b53-40f8-a897-bd25166fe0c2", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56662"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 11:49:51 | TRACE | outbound route: 0ff9227d, inbound: [f4878e39-4] 
2025-03-29 11:49:57 | DEBUG | Will instrument the response
2025-03-29 11:49:57 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=5.7425158, duration(nanos)=5.7425158E9, startTimeNanos=749291350528400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6fb5be49'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3cdf6dab}
2025-03-29 11:49:57 | TRACE | NettyWriteResponseFilter start inbound: 0ff9227d, outbound: [f4878e39-4] 
2025-03-29 11:49:57 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=INTERNAL_SERVER_ERROR)]
2025-03-29 11:58:12 | TRACE | Weights attr: {}
2025-03-29 11:58:12 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:58:12 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:58:12 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] write() done
2025-03-29 11:58:12 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 11:58:12 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 11:58:12 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Received: 4 bytes, 1 commands in the stack
2025-03-29 11:58:12 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Stack contains: 1 commands
2025-03-29 11:58:12 | DEBUG | Decode done, empty stack: true
2025-03-29 11:58:12 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Completing command LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 11:58:12 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/me/profile/enhanced"
2025-03-29 11:58:12 | DEBUG | Route matched: user-service-route
2025-03-29 11:58:12 | DEBUG | Mapping [Exchange: GET http://localhost:8080/users/api/v1/me/profile/enhanced] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 11:58:12 | DEBUG | [371a97fa-5] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 11:58:12 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 11:58:12 | TRACE | RouteToRequestUrlFilter start
2025-03-29 11:58:12 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"4e90e187-e919-4bca-9a9a-23d1b12a1c87", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56788"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 11:58:12 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.845E-4, duration(nanos)=184500.0, startTimeNanos=749792207424400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@26dc75a6'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3d44e466} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"4e90e187-e919-4bca-9a9a-23d1b12a1c87", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56788"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 11:58:12 | TRACE | outbound route: e745c1e8, inbound: [371a97fa-5] 
2025-03-29 11:58:18 | DEBUG | Will instrument the response
2025-03-29 11:58:18 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=5.4742309, duration(nanos)=5.4742309E9, startTimeNanos=749792207424400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@26dc75a6'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3d44e466}
2025-03-29 11:58:18 | TRACE | NettyWriteResponseFilter start inbound: e745c1e8, outbound: [371a97fa-5] 
2025-03-29 11:58:18 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=INTERNAL_SERVER_ERROR)]
2025-03-29 12:05:36 | TRACE | Weights attr: {}
2025-03-29 12:05:36 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:05:36 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:05:36 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 12:05:36 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-03-29 12:05:36 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:05:37 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 4 bytes, 1 commands in the stack
2025-03-29 12:05:37 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-03-29 12:05:37 | DEBUG | Decode done, empty stack: true
2025-03-29 12:05:37 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 12:05:37 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/me/profile/enhanced"
2025-03-29 12:05:37 | DEBUG | Route matched: user-service-route
2025-03-29 12:05:37 | DEBUG | Mapping [Exchange: GET http://localhost:8080/users/api/v1/me/profile/enhanced] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 12:05:37 | DEBUG | [ddb07ca5-6] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 12:05:37 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 12:05:37 | TRACE | RouteToRequestUrlFilter start
2025-03-29 12:05:37 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"745f903d-7141-455c-bcd8-cc20816288d4", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56909"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 12:05:37 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.547E-4, duration(nanos)=154700.0, startTimeNanos=750236829090900}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@34d31048'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2eaeb560} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"745f903d-7141-455c-bcd8-cc20816288d4", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56909"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 12:05:37 | TRACE | outbound route: f7cd4fd0, inbound: [ddb07ca5-6] 
2025-03-29 12:05:42 | DEBUG | Will instrument the response
2025-03-29 12:05:42 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=5.140406, duration(nanos)=5.140406E9, startTimeNanos=750236829090900}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@34d31048'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2eaeb560}
2025-03-29 12:05:42 | TRACE | NettyWriteResponseFilter start inbound: f7cd4fd0, outbound: [ddb07ca5-6] 
2025-03-29 12:05:42 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=INTERNAL_SERVER_ERROR)]
2025-03-29 12:18:45 | TRACE | Weights attr: {}
2025-03-29 12:18:45 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:18:45 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:18:45 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] write() done
2025-03-29 12:18:45 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 12:18:45 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:18:45 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Received: 4 bytes, 1 commands in the stack
2025-03-29 12:18:45 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Stack contains: 1 commands
2025-03-29 12:18:45 | DEBUG | Decode done, empty stack: true
2025-03-29 12:18:45 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Completing command LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 12:18:45 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/me/profile/enhanced"
2025-03-29 12:18:45 | DEBUG | Route matched: user-service-route
2025-03-29 12:18:45 | DEBUG | Mapping [Exchange: GET http://localhost:8080/users/api/v1/me/profile/enhanced] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 12:18:45 | DEBUG | [c0833b98-7] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 12:18:45 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 12:18:45 | TRACE | RouteToRequestUrlFilter start
2025-03-29 12:18:45 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"318a1908-99bb-41c8-a691-b13a4fb0685a", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57004"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 12:18:45 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.705E-4, duration(nanos)=170500.0, startTimeNanos=751025064558100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@67ab2eaa'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@11b3905e} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"318a1908-99bb-41c8-a691-b13a4fb0685a", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57004"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 12:18:45 | TRACE | outbound route: 424673ff, inbound: [c0833b98-7] 
2025-03-29 12:18:50 | DEBUG | Will instrument the response
2025-03-29 12:18:50 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=5.2861207, duration(nanos)=5.2861207E9, startTimeNanos=751025064558100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@67ab2eaa'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@11b3905e}
2025-03-29 12:18:50 | TRACE | NettyWriteResponseFilter start inbound: 424673ff, outbound: [c0833b98-7] 
2025-03-29 12:18:50 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=INTERNAL_SERVER_ERROR)]
2025-03-29 12:19:30 | TRACE | Weights attr: {}
2025-03-29 12:19:30 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:19:30 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:19:30 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() done
2025-03-29 12:19:30 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 12:19:30 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:19:30 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Received: 4 bytes, 1 commands in the stack
2025-03-29 12:19:30 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 1 commands
2025-03-29 12:19:30 | DEBUG | Decode done, empty stack: true
2025-03-29 12:19:30 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 12:19:30 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/me/profile/enhanced"
2025-03-29 12:19:30 | DEBUG | Route matched: user-service-route
2025-03-29 12:19:30 | DEBUG | Mapping [Exchange: GET http://localhost:8080/users/api/v1/me/profile/enhanced] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 12:19:30 | DEBUG | [c0833b98-8] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 12:19:30 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 12:19:30 | TRACE | RouteToRequestUrlFilter start
2025-03-29 12:19:30 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"c2b8d33e-9faf-4e94-9782-055622904242", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57004"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 12:19:30 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.376E-4, duration(nanos)=137600.0, startTimeNanos=751070636896100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5f05938e'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6a80ea26} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"c2b8d33e-9faf-4e94-9782-055622904242", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57004"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 12:19:30 | TRACE | outbound route: c2a5f484, inbound: [c0833b98-8] 
2025-03-29 12:19:31 | DEBUG | Will instrument the response
2025-03-29 12:19:31 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.3849016, duration(nanos)=3.849016E8, startTimeNanos=751070636896100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5f05938e'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6a80ea26}
2025-03-29 12:19:31 | TRACE | NettyWriteResponseFilter start inbound: c2a5f484, outbound: [c0833b98-8] 
2025-03-29 12:19:31 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=INTERNAL_SERVER_ERROR)]
2025-03-29 12:20:06 | TRACE | Weights attr: {}
2025-03-29 12:20:06 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:20:06 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:20:06 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] write() done
2025-03-29 12:20:06 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 12:20:06 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:20:07 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Received: 4 bytes, 1 commands in the stack
2025-03-29 12:20:07 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Stack contains: 1 commands
2025-03-29 12:20:07 | DEBUG | Decode done, empty stack: true
2025-03-29 12:20:07 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Completing command LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 12:20:07 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/me/profile/enhanced"
2025-03-29 12:20:07 | DEBUG | Route matched: user-service-route
2025-03-29 12:20:07 | DEBUG | Mapping [Exchange: GET http://localhost:8080/users/api/v1/me/profile/enhanced] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 12:20:07 | DEBUG | [c0833b98-9] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 12:20:07 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 12:20:07 | TRACE | RouteToRequestUrlFilter start
2025-03-29 12:20:07 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"4d3bd778-c1b4-473f-9359-62655dc46e24", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57004"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 12:20:07 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.393E-4, duration(nanos)=239300.0, startTimeNanos=751106888760000}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3c532299'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@7b26a28d} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"4d3bd778-c1b4-473f-9359-62655dc46e24", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57004"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 12:20:07 | TRACE | outbound route: dd385acf, inbound: [c0833b98-9] 
2025-03-29 12:20:17 | DEBUG | Will instrument the response
2025-03-29 12:20:17 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.9441435, duration(nanos)=9.9441435E9, startTimeNanos=751106888760000}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3c532299'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@7b26a28d}
2025-03-29 12:20:17 | TRACE | NettyWriteResponseFilter start inbound: dd385acf, outbound: [c0833b98-9] 
2025-03-29 12:20:17 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=INTERNAL_SERVER_ERROR)]
2025-03-29 12:27:18 | TRACE | Weights attr: {}
2025-03-29 12:27:18 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:27:18 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:27:18 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] write() done
2025-03-29 12:27:18 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 12:27:18 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:27:18 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Received: 4 bytes, 1 commands in the stack
2025-03-29 12:27:18 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Stack contains: 1 commands
2025-03-29 12:27:18 | DEBUG | Decode done, empty stack: true
2025-03-29 12:27:18 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Completing command LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 12:27:18 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/me/profile/enhanced"
2025-03-29 12:27:18 | DEBUG | Route matched: user-service-route
2025-03-29 12:27:18 | DEBUG | Mapping [Exchange: GET http://localhost:8080/users/api/v1/me/profile/enhanced] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 12:27:18 | DEBUG | [f3dc5f24-10] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 12:27:18 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 12:27:18 | TRACE | RouteToRequestUrlFilter start
2025-03-29 12:27:18 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"e8b8235e-2123-47cc-a190-d72f78e00d56", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57093"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 12:27:18 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.541E-4, duration(nanos)=254100.0, startTimeNanos=751538428464200}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@149b0652'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4f45b414} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"e8b8235e-2123-47cc-a190-d72f78e00d56", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57093"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 12:27:18 | TRACE | outbound route: 9781d9d9, inbound: [f3dc5f24-10] 
2025-03-29 12:27:23 | DEBUG | Will instrument the response
2025-03-29 12:27:23 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=4.6741756, duration(nanos)=4.6741756E9, startTimeNanos=751538428464200}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@149b0652'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4f45b414}
2025-03-29 12:27:23 | TRACE | NettyWriteResponseFilter start inbound: 9781d9d9, outbound: [f3dc5f24-10] 
2025-03-29 12:27:23 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=INTERNAL_SERVER_ERROR)]
2025-03-29 12:29:24 | TRACE | Weights attr: {}
2025-03-29 12:29:24 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:29:24 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:29:24 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-03-29 12:29:24 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 12:29:24 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:29:24 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 4 bytes, 1 commands in the stack
2025-03-29 12:29:24 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-03-29 12:29:24 | DEBUG | Decode done, empty stack: true
2025-03-29 12:29:24 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 12:29:24 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/me/profile/enhanced"
2025-03-29 12:29:24 | DEBUG | Route matched: user-service-route
2025-03-29 12:29:24 | DEBUG | Mapping [Exchange: GET http://localhost:8080/users/api/v1/me/profile/enhanced] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 12:29:24 | DEBUG | [8624a48d-11] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 12:29:24 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 12:29:24 | TRACE | RouteToRequestUrlFilter start
2025-03-29 12:29:24 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"1ca23756-6e63-427f-acb1-09bc80adcf94", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57127"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 12:29:24 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.095E-4, duration(nanos)=109500.0, startTimeNanos=751662371836800}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@16b60f2c'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@74b1fcfa} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"1ca23756-6e63-427f-acb1-09bc80adcf94", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57127"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 12:29:24 | TRACE | outbound route: 6143026a, inbound: [8624a48d-11] 
2025-03-29 12:29:27 | DEBUG | Will instrument the response
2025-03-29 12:29:27 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=3.6300862, duration(nanos)=3.6300862E9, startTimeNanos=751662371836800}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@16b60f2c'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@74b1fcfa}
2025-03-29 12:29:27 | TRACE | NettyWriteResponseFilter start inbound: 6143026a, outbound: [8624a48d-11] 
2025-03-29 12:29:27 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=INTERNAL_SERVER_ERROR)]
2025-03-29 12:36:14 | TRACE | Weights attr: {}
2025-03-29 12:36:14 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:36:14 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:36:14 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] write() done
2025-03-29 12:36:14 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 12:36:14 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:36:15 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Received: 4 bytes, 1 commands in the stack
2025-03-29 12:36:15 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Stack contains: 1 commands
2025-03-29 12:36:15 | DEBUG | Decode done, empty stack: true
2025-03-29 12:36:15 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Completing command LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 12:36:15 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/me/profile/enhanced"
2025-03-29 12:36:15 | DEBUG | Route matched: user-service-route
2025-03-29 12:36:15 | DEBUG | Mapping [Exchange: GET http://localhost:8080/users/api/v1/me/profile/enhanced] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 12:36:15 | DEBUG | [00619621-12] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 12:36:15 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 12:36:15 | TRACE | RouteToRequestUrlFilter start
2025-03-29 12:36:15 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"ff297be1-9351-4799-8a15-723e62870b6d", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57250"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 12:36:15 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.435E-4, duration(nanos)=143500.0, startTimeNanos=752073026653700}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@c6a64a1'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1d62412} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"ff297be1-9351-4799-8a15-723e62870b6d", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57250"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 12:36:15 | TRACE | outbound route: eeb06111, inbound: [00619621-12] 
2025-03-29 12:36:19 | DEBUG | Will instrument the response
2025-03-29 12:36:19 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=4.7300865, duration(nanos)=4.7300865E9, startTimeNanos=752073026653700}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@c6a64a1'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1d62412}
2025-03-29 12:36:19 | TRACE | NettyWriteResponseFilter start inbound: eeb06111, outbound: [00619621-12] 
2025-03-29 12:36:19 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=INTERNAL_SERVER_ERROR)]
2025-03-29 12:37:52 | TRACE | Weights attr: {}
2025-03-29 12:37:52 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:37:52 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:37:52 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 12:37:52 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() done
2025-03-29 12:37:52 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:37:52 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Received: 4 bytes, 1 commands in the stack
2025-03-29 12:37:52 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 1 commands
2025-03-29 12:37:52 | DEBUG | Decode done, empty stack: true
2025-03-29 12:37:52 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 12:37:52 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/me/profile/enhanced"
2025-03-29 12:37:52 | DEBUG | Route matched: user-service-route
2025-03-29 12:37:52 | DEBUG | Mapping [Exchange: GET http://localhost:8080/users/api/v1/me/profile/enhanced] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 12:37:52 | DEBUG | [b2cdff4f-13] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 12:37:52 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 12:37:52 | TRACE | RouteToRequestUrlFilter start
2025-03-29 12:37:52 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"8b9a1fb9-5867-4c30-9316-b879006c344e", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57299"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 12:37:52 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.303E-4, duration(nanos)=130300.0, startTimeNanos=752170881879400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@72aebf74'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1f92aadd} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"8b9a1fb9-5867-4c30-9316-b879006c344e", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57299"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 12:37:52 | TRACE | outbound route: 4dd6ae45, inbound: [b2cdff4f-13] 
2025-03-29 12:37:54 | DEBUG | Will instrument the response
2025-03-29 12:37:54 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.3986743, duration(nanos)=1.3986743E9, startTimeNanos=752170881879400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@72aebf74'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1f92aadd}
2025-03-29 12:37:54 | TRACE | NettyWriteResponseFilter start inbound: 4dd6ae45, outbound: [b2cdff4f-13] 
2025-03-29 12:37:54 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=INTERNAL_SERVER_ERROR)]
2025-03-29 12:38:38 | TRACE | Weights attr: {}
2025-03-29 12:38:38 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:38:38 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:38:38 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] write() done
2025-03-29 12:38:38 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 12:38:38 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:38:38 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Received: 4 bytes, 1 commands in the stack
2025-03-29 12:38:38 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Stack contains: 1 commands
2025-03-29 12:38:38 | DEBUG | Decode done, empty stack: true
2025-03-29 12:38:38 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Completing command LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 12:38:38 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/me/profile/enhanced"
2025-03-29 12:38:38 | DEBUG | Route matched: user-service-route
2025-03-29 12:38:38 | DEBUG | Mapping [Exchange: GET http://localhost:8080/users/api/v1/me/profile/enhanced] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 12:38:38 | DEBUG | [b2cdff4f-14] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 12:38:38 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 12:38:38 | TRACE | RouteToRequestUrlFilter start
2025-03-29 12:38:38 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"4eaef9a2-fe75-4635-8ede-275f1eb8b750", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57299"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 12:38:38 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.656E-4, duration(nanos)=165600.0, startTimeNanos=752216578618100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@52b44109'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1c48a318} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"4eaef9a2-fe75-4635-8ede-275f1eb8b750", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57299"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 12:38:38 | TRACE | outbound route: 993e4a1c, inbound: [b2cdff4f-14] 
2025-03-29 12:38:43 | DEBUG | Will instrument the response
2025-03-29 12:38:43 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=4.4803351, duration(nanos)=4.4803351E9, startTimeNanos=752216578618100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@52b44109'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1c48a318}
2025-03-29 12:38:43 | TRACE | NettyWriteResponseFilter start inbound: 993e4a1c, outbound: [b2cdff4f-14] 
2025-03-29 12:38:43 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=INTERNAL_SERVER_ERROR)]
2025-03-29 12:44:37 | TRACE | Weights attr: {}
2025-03-29 12:44:37 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:44:37 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:44:37 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] write() done
2025-03-29 12:44:37 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 12:44:37 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:44:37 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Received: 4 bytes, 1 commands in the stack
2025-03-29 12:44:37 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Stack contains: 1 commands
2025-03-29 12:44:37 | DEBUG | Decode done, empty stack: true
2025-03-29 12:44:37 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Completing command LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 12:44:37 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/me/profile/enhanced"
2025-03-29 12:44:37 | DEBUG | Route matched: user-service-route
2025-03-29 12:44:37 | DEBUG | Mapping [Exchange: GET http://localhost:8080/users/api/v1/me/profile/enhanced] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 12:44:37 | DEBUG | [f6b9af45-15] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 12:44:37 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 12:44:37 | TRACE | RouteToRequestUrlFilter start
2025-03-29 12:44:37 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"c998828f-c52d-4082-97bc-b5e8479bbadb", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57385"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 12:44:37 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.267E-4, duration(nanos)=126700.0, startTimeNanos=752575996748800}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@382b95b1'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4306e862} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"c998828f-c52d-4082-97bc-b5e8479bbadb", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57385"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 12:44:37 | TRACE | outbound route: ae7a5f86, inbound: [f6b9af45-15] 
2025-03-29 12:44:42 | DEBUG | Will instrument the response
2025-03-29 12:44:42 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=4.5870416, duration(nanos)=4.5870416E9, startTimeNanos=752575996748800}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@382b95b1'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4306e862}
2025-03-29 12:44:42 | TRACE | NettyWriteResponseFilter start inbound: ae7a5f86, outbound: [f6b9af45-15] 
2025-03-29 12:44:42 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=INTERNAL_SERVER_ERROR)]
2025-03-29 12:46:08 | TRACE | Weights attr: {}
2025-03-29 12:46:08 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:46:08 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:46:08 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-03-29 12:46:08 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 12:46:08 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 12:46:09 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 4 bytes, 1 commands in the stack
2025-03-29 12:46:09 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-03-29 12:46:09 | DEBUG | Decode done, empty stack: true
2025-03-29 12:46:09 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 12:46:09 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/me/profile/enhanced"
2025-03-29 12:46:09 | DEBUG | Route matched: user-service-route
2025-03-29 12:46:09 | DEBUG | Mapping [Exchange: GET http://localhost:8080/users/api/v1/me/profile/enhanced] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 12:46:09 | DEBUG | [c5e06a76-16] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 12:46:09 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 12:46:09 | TRACE | RouteToRequestUrlFilter start
2025-03-29 12:46:09 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"e8b4d9af-0f89-42ed-9aff-1d868260f82e", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57411"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 12:46:09 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.192E-4, duration(nanos)=119200.0, startTimeNanos=752667036210200}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@d763c07'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@79478033} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"e8b4d9af-0f89-42ed-9aff-1d868260f82e", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57411"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 12:46:09 | TRACE | outbound route: 08b4eceb, inbound: [c5e06a76-16] 
2025-03-29 12:46:13 | DEBUG | Will instrument the response
2025-03-29 12:46:13 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=4.4522011, duration(nanos)=4.4522011E9, startTimeNanos=752667036210200}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@d763c07'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@79478033}
2025-03-29 12:46:13 | TRACE | NettyWriteResponseFilter start inbound: 08b4eceb, outbound: [c5e06a76-16] 
2025-03-29 12:46:13 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=INTERNAL_SERVER_ERROR)]
2025-03-29 13:44:45 | TRACE | Weights attr: {}
2025-03-29 13:44:45 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:44:45 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:44:45 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] write() done
2025-03-29 13:44:45 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 13:44:45 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:44:50 | ERROR | Redis connection error: Redis command timed out
2025-03-29 13:44:50 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/me/profile/enhanced"
2025-03-29 13:44:50 | DEBUG | Route matched: user-service-route
2025-03-29 13:44:50 | DEBUG | Mapping [Exchange: GET http://localhost:8080/users/api/v1/me/profile/enhanced] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 13:44:50 | DEBUG | [868c6ac1-17] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 13:44:50 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 13:44:50 | TRACE | RouteToRequestUrlFilter start
2025-03-29 13:44:50 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"dfc90728-3004-4517-86c3-9c55718fb507", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54593"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 13:44:50 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0101818, duration(nanos)=1.01818E7, startTimeNanos=756188663518500}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7bbe4057'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@11c39791} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"dfc90728-3004-4517-86c3-9c55718fb507", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54593"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 13:44:50 | TRACE | outbound route: 0ce8d55c, inbound: [868c6ac1-17] 
2025-03-29 13:45:12 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Storing exception in LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=null, error='Command timed out after 3 second(s)'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 13:45:12 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Unexpected exception during request: java.net.SocketException: Connection reset
java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:403)
	at java.base/sun.nio.ch.SocketChannelImpl.implRead(SocketChannelImpl.java:435)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:493)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:356)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-03-29 13:45:13 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] channelInactive()
2025-03-29 13:45:13 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] deactivating endpoint handler
2025-03-29 13:45:13 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] notifyQueuedCommands adding 0 command(s) to buffer
2025-03-29 13:45:13 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] channelInactive() done
2025-03-29 13:45:13 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-03-29 13:45:13 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-03-29 13:45:13 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 1, delay 1ms
2025-03-29 13:45:13 | DEBUG | [channel=0xf3f02d83, /192.168.102.3:56453 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] channelUnregistered()
2025-03-29 13:45:13 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-03-29 13:45:13 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 13:45:13 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-03-29 13:45:13 | DEBUG | [channel=0x678bb405, [id: 0xe9617abd] (inactive), epid=0x4, chid=0x6] channelRegistered()
2025-03-29 13:45:14 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x6] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 13:45:14 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:45:14 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x6] Received: 705 bytes, 1 commands in the stack
2025-03-29 13:45:14 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x6] Stack contains: 1 commands
2025-03-29 13:45:14 | DEBUG | Decode done, empty stack: true
2025-03-29 13:45:14 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x6] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 13:45:14 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x6] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-03-29 13:45:14 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:45:14 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:45:14 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x6] Received: 10 bytes, 2 commands in the stack
2025-03-29 13:45:14 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x6] Stack contains: 2 commands
2025-03-29 13:45:14 | DEBUG | Decode done, empty stack: true
2025-03-29 13:45:14 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x6] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 13:45:14 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x6] Stack contains: 1 commands
2025-03-29 13:45:14 | DEBUG | Decode done, empty stack: true
2025-03-29 13:45:14 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x6] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 13:45:14 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x6] channelActive()
2025-03-29 13:45:14 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-03-29 13:45:14 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] activating endpoint
2025-03-29 13:45:14 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] flushCommands()
2025-03-29 13:45:14 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] flushCommands() Flushing 0 commands
2025-03-29 13:45:14 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-03-29 13:45:14 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x6] channelActive() done
2025-03-29 13:45:14 | INFO  | Reconnected to redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694, Channel channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-03-29 13:45:19 | DEBUG | Will instrument the response
2025-03-29 13:45:19 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=29.3773784, duration(nanos)=2.93773784E10, startTimeNanos=756188663518500}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7bbe4057'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@11c39791}
2025-03-29 13:45:19 | TRACE | NettyWriteResponseFilter start inbound: 0ce8d55c, outbound: [868c6ac1-17] 
2025-03-29 13:45:20 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=INTERNAL_SERVER_ERROR)]
2025-03-29 13:47:03 | TRACE | Weights attr: {}
2025-03-29 13:47:03 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:47:03 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:47:03 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() done
2025-03-29 13:47:03 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 13:47:03 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:47:06 | ERROR | Redis connection error: Redis command timed out
2025-03-29 13:47:06 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/me/profile/enhanced"
2025-03-29 13:47:06 | DEBUG | Route matched: user-service-route
2025-03-29 13:47:06 | DEBUG | Mapping [Exchange: GET http://localhost:8080/users/api/v1/me/profile/enhanced] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 13:47:06 | DEBUG | [527d76d2-18] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 13:47:06 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 13:47:06 | TRACE | RouteToRequestUrlFilter start
2025-03-29 13:47:06 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"0c18ea87-ac47-4b32-9cd7-4aa0a5c0ff47", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54618"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 13:47:06 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.672E-4, duration(nanos)=667200.0, startTimeNanos=756324588037000}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@46848765'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@7172146c} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"0c18ea87-ac47-4b32-9cd7-4aa0a5c0ff47", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54618"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 13:47:06 | TRACE | outbound route: 581760dd, inbound: [527d76d2-18] 
2025-03-29 13:47:08 | DEBUG | Will instrument the response
2025-03-29 13:47:08 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.8785513, duration(nanos)=1.8785513E9, startTimeNanos=756324588037000}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@46848765'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@7172146c}
2025-03-29 13:47:08 | TRACE | NettyWriteResponseFilter start inbound: 581760dd, outbound: [527d76d2-18] 
2025-03-29 13:47:08 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-03-29 13:47:26 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Storing exception in LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=null, error='Command timed out after 3 second(s)'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 13:47:26 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Unexpected exception during request: java.net.SocketException: Connection reset
java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:403)
	at java.base/sun.nio.ch.SocketChannelImpl.implRead(SocketChannelImpl.java:435)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:493)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:356)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-03-29 13:47:26 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelInactive()
2025-03-29 13:47:26 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] deactivating endpoint handler
2025-03-29 13:47:26 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] notifyQueuedCommands adding 0 command(s) to buffer
2025-03-29 13:47:26 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelInactive() done
2025-03-29 13:47:26 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-03-29 13:47:26 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-03-29 13:47:26 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 1, delay 1ms
2025-03-29 13:47:26 | DEBUG | [channel=0x463f0a98, /192.168.102.3:56450 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelUnregistered()
2025-03-29 13:47:26 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-03-29 13:47:26 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 13:47:26 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-03-29 13:47:26 | DEBUG | [channel=0x8dbe5331, [id: 0x2e084365] (inactive), epid=0x2, chid=0x7] channelRegistered()
2025-03-29 13:47:26 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x7] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 13:47:26 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:47:27 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x7] Received: 705 bytes, 1 commands in the stack
2025-03-29 13:47:27 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x7] Stack contains: 1 commands
2025-03-29 13:47:27 | DEBUG | Decode done, empty stack: true
2025-03-29 13:47:27 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x7] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 13:47:27 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x7] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-03-29 13:47:27 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:47:27 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:47:27 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x7] Received: 10 bytes, 2 commands in the stack
2025-03-29 13:47:27 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x7] Stack contains: 2 commands
2025-03-29 13:47:27 | DEBUG | Decode done, empty stack: true
2025-03-29 13:47:27 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x7] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 13:47:27 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x7] Stack contains: 1 commands
2025-03-29 13:47:27 | DEBUG | Decode done, empty stack: true
2025-03-29 13:47:27 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x7] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 13:47:27 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x7] channelActive()
2025-03-29 13:47:27 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-03-29 13:47:27 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] activating endpoint
2025-03-29 13:47:27 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] flushCommands()
2025-03-29 13:47:27 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] flushCommands() Flushing 0 commands
2025-03-29 13:47:27 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-03-29 13:47:27 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x7] channelActive() done
2025-03-29 13:47:27 | INFO  | Reconnected to redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694, Channel channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-03-29 13:51:03 | TRACE | Weights attr: {}
2025-03-29 13:51:03 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:51:03 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:51:03 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] write() done
2025-03-29 13:51:03 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 13:51:03 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:51:06 | ERROR | Redis connection error: Redis command timed out
2025-03-29 13:51:06 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/me/profile/enhanced"
2025-03-29 13:51:06 | DEBUG | Route matched: user-service-route
2025-03-29 13:51:06 | DEBUG | Mapping [Exchange: GET http://localhost:8080/users/api/v1/me/profile/enhanced] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 13:51:06 | DEBUG | [24377d12-19] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 13:51:06 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 13:51:06 | TRACE | RouteToRequestUrlFilter start
2025-03-29 13:51:06 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"4e91b7e7-efab-4e9c-9cc0-d6ce0627c927", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54671"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 13:51:06 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.342E-4, duration(nanos)=134200.0, startTimeNanos=756564896867200}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5629d2e2'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@33d4438e} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"4e91b7e7-efab-4e9c-9cc0-d6ce0627c927", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54671"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 13:51:07 | TRACE | outbound route: 4cca27b6, inbound: [24377d12-19] 
2025-03-29 13:51:07 | DEBUG | Will instrument the response
2025-03-29 13:51:07 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/me/profile/enhanced'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.6183697, duration(nanos)=6.183697E8, startTimeNanos=756564896867200}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5629d2e2'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@33d4438e}
2025-03-29 13:51:07 | TRACE | NettyWriteResponseFilter start inbound: 4cca27b6, outbound: [24377d12-19] 
2025-03-29 13:51:07 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-03-29 13:51:25 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Storing exception in LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=null, error='Command timed out after 3 second(s)'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 13:51:25 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Unexpected exception during request: java.net.SocketException: Connection reset
java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:403)
	at java.base/sun.nio.ch.SocketChannelImpl.implRead(SocketChannelImpl.java:435)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:493)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:356)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-03-29 13:51:25 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] channelInactive()
2025-03-29 13:51:25 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] deactivating endpoint handler
2025-03-29 13:51:25 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] notifyQueuedCommands adding 0 command(s) to buffer
2025-03-29 13:51:25 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] channelInactive() done
2025-03-29 13:51:25 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-03-29 13:51:25 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-03-29 13:51:25 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 1, delay 1ms
2025-03-29 13:51:25 | DEBUG | [channel=0xca0ff043, /192.168.102.3:56452 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] channelUnregistered()
2025-03-29 13:51:25 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-03-29 13:51:25 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 13:51:25 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-03-29 13:51:25 | DEBUG | [channel=0x2370b988, [id: 0xe155d029] (inactive), epid=0x3, chid=0x8] channelRegistered()
2025-03-29 13:51:25 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x8] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 13:51:25 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:51:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x8] Received: 705 bytes, 1 commands in the stack
2025-03-29 13:51:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x8] Stack contains: 1 commands
2025-03-29 13:51:26 | DEBUG | Decode done, empty stack: true
2025-03-29 13:51:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x8] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 13:51:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x8] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-03-29 13:51:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:51:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:51:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x8] Received: 10 bytes, 2 commands in the stack
2025-03-29 13:51:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x8] Stack contains: 2 commands
2025-03-29 13:51:26 | DEBUG | Decode done, empty stack: true
2025-03-29 13:51:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x8] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 13:51:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x8] Stack contains: 1 commands
2025-03-29 13:51:26 | DEBUG | Decode done, empty stack: true
2025-03-29 13:51:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x8] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 13:51:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x8] channelActive()
2025-03-29 13:51:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-03-29 13:51:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] activating endpoint
2025-03-29 13:51:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] flushCommands()
2025-03-29 13:51:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] flushCommands() Flushing 0 commands
2025-03-29 13:51:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-03-29 13:51:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x8] channelActive() done
2025-03-29 13:51:26 | INFO  | Reconnected to redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694, Channel channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-03-29 13:55:54 | TRACE | Weights attr: {}
2025-03-29 13:55:54 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:55:54 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:55:54 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] write() done
2025-03-29 13:55:54 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 13:55:54 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:55:57 | ERROR | Redis connection error: Redis command timed out
2025-03-29 13:55:57 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 13:55:57 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 13:55:57 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/create"
2025-03-29 13:55:57 | DEBUG | Route matched: account-service-route
2025-03-29 13:55:57 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/api/v1/create] to Route{id='account-service-route', uri=http://account-service:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 13:55:57 | DEBUG | [0fea476a-20] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 13:55:57 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 13:55:57 | TRACE | RouteToRequestUrlFilter start
2025-03-29 13:55:57 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"286c22a3-3ddc-4977-84f2-953ed73af300", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54746"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 13:55:58 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://account-service:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/create'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.587E-4, duration(nanos)=158700.0, startTimeNanos=756856066010700}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@73a0f692'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1ae1be5} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"286c22a3-3ddc-4977-84f2-953ed73af300", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54746"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 13:56:00 | DEBUG | An exception occurred and observation was not previously stopped, will stop it. The exception was [java.net.UnknownHostException: Failed to resolve 'account-service' [A(1), AAAA(28)] after 4 queries ]
2025-03-29 13:56:04 | ERROR | [0fea476a-20]  500 Server Error for HTTP POST "/accounts/api/v1/create"
java.net.UnknownHostException: Failed to resolve 'account-service' [A(1), AAAA(28)] after 4 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoError] :
	reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
Error has been observed at the following site(s):
	*__FluxOnErrorResume$ResumeSubscriber.onError ⇢ at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
	*__________________________Mono.onErrorResume ⇢ at reactor.netty.transport.TransportConnector.lambda$connect$6(TransportConnector.java:166)
	*________________________________Mono.flatMap ⇢ at reactor.netty.transport.TransportConnector.connect(TransportConnector.java:165)
	*_________________________________Mono.create ⇢ at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator.connectChannel(DefaultPooledConnectionProvider.java:537)
	*_________________________________Mono.create ⇢ at reactor.netty.resources.PooledConnectionProvider.acquire(PooledConnectionProvider.java:130)
	*_________________________________Mono.create ⇢ at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect.subscribe(HttpClientConnect.java:211)
	|_                             Mono.retryWhen ⇢ at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect.subscribe(HttpClientConnect.java:282)
	*______________________________Flux.concatMap ⇢ at reactor.util.retry.RetrySpec.lambda$generateCompanion$6(RetrySpec.java:360)
	|_                           Flux.onErrorStop ⇢ at reactor.util.retry.RetrySpec.lambda$generateCompanion$6(RetrySpec.java:379)
	*________________________Flux.deferContextual ⇢ at reactor.util.retry.RetrySpec.generateCompanion(RetrySpec.java:357)
	*____________________________Mono.flatMapMany ⇢ at reactor.netty.http.client.HttpClientFinalizer.responseConnection(HttpClientFinalizer.java:102)
	*____________________________Mono.flatMapMany ⇢ at org.springframework.cloud.gateway.filter.NettyRoutingFilter.filter(NettyRoutingFilter.java:134)
	*___________________________________Flux.then ⇢ at org.springframework.cloud.gateway.filter.NettyRoutingFilter.filter(NettyRoutingFilter.java:200)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.cloud.gateway.filter.GatewayMetricsFilter.filter(GatewayMetricsFilter.java:76)
	|_                             Mono.doOnError ⇢ at org.springframework.cloud.gateway.filter.GatewayMetricsFilter.filter(GatewayMetricsFilter.java:77)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*___________________________________Mono.then ⇢ at org.springframework.cloud.gateway.filter.NettyWriteResponseFilter.filter(NettyWriteResponseFilter.java:69)
	|_                            Mono.doOnCancel ⇢ at org.springframework.cloud.gateway.filter.NettyWriteResponseFilter.filter(NettyWriteResponseFilter.java:101)
	|_                             Mono.doOnError ⇢ at org.springframework.cloud.gateway.filter.NettyWriteResponseFilter.filter(NettyWriteResponseFilter.java:102)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	|_                             Mono.doFinally ⇢ at org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter.filter(RemoveCachedBodyFilter.java:29)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*___________________________________Mono.then ⇢ at org.springframework.web.reactive.result.SimpleHandlerAdapter.handle(SimpleHandlerAdapter.java:46)
	|_                         Mono.onErrorResume ⇢ at org.springframework.web.reactive.DispatcherHandler.handleResultMono(DispatcherHandler.java:168)
	|_                               Mono.flatMap ⇢ at org.springframework.web.reactive.DispatcherHandler.handleResultMono(DispatcherHandler.java:172)
	*__________________________________Mono.error ⇢ at org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.handleException(RequestMappingHandlerAdapter.java:340)
	*________________________________Mono.flatMap ⇢ at org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:154)
	*__________________________________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	|_                                 checkpoint ⇢ com.project.apigateway.filter.GlobalCorsFilter$$Lambda/0x0000014a876ad000 [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	*__________________________Mono.onErrorResume ⇢ at com.project.apigateway.filter.CachingFilter.filter(CachingFilter.java:57)
	|_                                 checkpoint ⇢ com.project.apigateway.filter.CachingFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	|_                                 checkpoint ⇢ org.springframework.cloud.gateway.filter.WeightCalculatorWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$WebFilterObservation$SimpleWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:560)
	|_                            Mono.doOnCancel ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$WebFilterObservation$SimpleWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:561)
	|_                             Mono.doOnError ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$WebFilterObservation$SimpleWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:562)
	|_                          Mono.contextWrite ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$WebFilterObservation$SimpleWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:566)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$2(ObservationWebFilterChainDecorator.java:351)
	|_                            Mono.doOnCancel ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$2(ObservationWebFilterChainDecorator.java:352)
	|_                             Mono.doOnError ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$2(ObservationWebFilterChainDecorator.java:353)
	*________________________Mono.deferContextual ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator.lambda$wrapSecured$1(ObservationWebFilterChainDecorator.java:76)
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	*__________________________Mono.switchIfEmpty ⇢ at org.springframework.security.web.server.authorization.AuthorizationWebFilter.filter(AuthorizationWebFilter.java:56)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ AuthorizationWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_                         Mono.onErrorResume ⇢ at org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter.filter(ExceptionTranslationWebFilter.java:53)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ ExceptionTranslationWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	*___________________________________Mono.then ⇢ at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:63)
	*__________________________Mono.switchIfEmpty ⇢ at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:63)
	|_                                   Mono.map ⇢ at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:64)
	|_                               Mono.flatMap ⇢ at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:65)
	|_                               Mono.flatMap ⇢ at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:66)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ LogoutWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	*________________________________Mono.flatMap ⇢ at org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter.filter(ServerRequestCacheWebFilter.java:41)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ ServerRequestCacheWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_                          Mono.contextWrite ⇢ at org.springframework.security.web.server.context.ReactorContextWebFilter.filter(ReactorContextWebFilter.java:48)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ CorsWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_                          Mono.contextWrite ⇢ at org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter.filter(ServerHttpSecurity.java:4047)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:367)
	|_                            Mono.doOnCancel ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:368)
	|_                             Mono.doOnError ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:369)
	|_                          Mono.contextWrite ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:373)
	*________________________Mono.deferContextual ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:193)
	|_                                 checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	*________________________________Mono.flatMap ⇢ at org.springframework.security.web.server.WebFilterChainProxy.filterFirewalledExchange(WebFilterChainProxy.java:78)
	*________________________________Mono.flatMap ⇢ at org.springframework.security.web.server.WebFilterChainProxy.filter(WebFilterChainProxy.java:65)
	|_                         Mono.onErrorResume ⇢ at org.springframework.security.web.server.WebFilterChainProxy.filter(WebFilterChainProxy.java:66)
	|_                                 checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	|_                          Mono.contextWrite ⇢ at com.project.apigateway.security.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:51)
	|_                                 checkpoint ⇢ com.project.apigateway.security.JwtAuthenticationFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	|_                             Mono.doOnError ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:84)
	|_                         Mono.onErrorResume ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:85)
	|_                             Mono.doOnError ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:84)
	|_                         Mono.onErrorResume ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:85)
	|_                             Mono.doOnError ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:84)
	*__________________________________Mono.error ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler$CheckpointInsertingHandler.handle(ExceptionHandlingWebHandler.java:106)
	|_                                 checkpoint ⇢ HTTP POST "/accounts/api/v1/create" [ExceptionHandlingWebHandler]
	*__________________________________Mono.error ⇢ at org.springframework.cloud.gateway.filter.headers.observation.ObservationClosingWebExceptionHandler.handle(ObservationClosingWebExceptionHandler.java:53)
Original Stack Trace:
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-03-29 13:56:08 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=account-service-route),tag(routeUri=http://account-service:8083),tag(status=INTERNAL_SERVER_ERROR)]
2025-03-29 13:56:17 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Storing exception in LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=null, error='Command timed out after 3 second(s)'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 13:56:17 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Unexpected exception during request: java.net.SocketException: Connection reset
java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:403)
	at java.base/sun.nio.ch.SocketChannelImpl.implRead(SocketChannelImpl.java:435)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:493)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:356)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-03-29 13:56:17 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] channelInactive()
2025-03-29 13:56:17 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] deactivating endpoint handler
2025-03-29 13:56:17 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] notifyQueuedCommands adding 0 command(s) to buffer
2025-03-29 13:56:17 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] channelInactive() done
2025-03-29 13:56:17 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-03-29 13:56:17 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-03-29 13:56:17 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 1, delay 1ms
2025-03-29 13:56:17 | DEBUG | [channel=0x86c854a4, /192.168.102.3:56454 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] channelUnregistered()
2025-03-29 13:56:17 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-03-29 13:56:17 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 13:56:17 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-03-29 13:56:17 | DEBUG | [channel=0x0a463815, [id: 0x85f06dfb] (inactive), epid=0x5, chid=0x9] channelRegistered()
2025-03-29 13:56:17 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x9] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 13:56:17 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:56:17 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x9] Received: 705 bytes, 1 commands in the stack
2025-03-29 13:56:17 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x9] Stack contains: 1 commands
2025-03-29 13:56:17 | DEBUG | Decode done, empty stack: true
2025-03-29 13:56:17 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x9] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 13:56:17 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x9] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-03-29 13:56:17 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:56:17 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:56:17 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x9] Received: 10 bytes, 2 commands in the stack
2025-03-29 13:56:17 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x9] Stack contains: 2 commands
2025-03-29 13:56:17 | DEBUG | Decode done, empty stack: true
2025-03-29 13:56:17 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x9] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 13:56:17 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x9] Stack contains: 1 commands
2025-03-29 13:56:17 | DEBUG | Decode done, empty stack: true
2025-03-29 13:56:17 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x9] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 13:56:17 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x9] channelActive()
2025-03-29 13:56:17 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-03-29 13:56:17 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] activating endpoint
2025-03-29 13:56:17 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] flushCommands()
2025-03-29 13:56:17 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] flushCommands() Flushing 0 commands
2025-03-29 13:56:17 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-03-29 13:56:17 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x9] channelActive() done
2025-03-29 13:56:17 | INFO  | Reconnected to redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694, Channel channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-03-29 13:56:27 | TRACE | Weights attr: {}
2025-03-29 13:56:27 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:56:27 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:56:27 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 13:56:27 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-03-29 13:56:27 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:56:30 | ERROR | Redis connection error: Redis command timed out
2025-03-29 13:56:30 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 13:56:30 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 13:56:30 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/create"
2025-03-29 13:56:30 | DEBUG | Route matched: account-service-route
2025-03-29 13:56:30 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/api/v1/create] to Route{id='account-service-route', uri=http://account-service:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 13:56:30 | DEBUG | [0fea476a-21] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 13:56:30 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 13:56:30 | TRACE | RouteToRequestUrlFilter start
2025-03-29 13:56:30 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"c6003fcb-b729-4fc9-90c4-b047121fee4f", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54746"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 13:56:30 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://account-service:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/create'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.243E-4, duration(nanos)=124300.0, startTimeNanos=756888787499000}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1e8f1f45'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2d1d2851} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"c6003fcb-b729-4fc9-90c4-b047121fee4f", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54746"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 13:56:30 | DEBUG | An exception occurred and observation was not previously stopped, will stop it. The exception was [java.net.UnknownHostException: Failed to resolve 'account-service' [A(1), AAAA(28)] after 4 queries ]
2025-03-29 13:56:30 | ERROR | [0fea476a-21]  500 Server Error for HTTP POST "/accounts/api/v1/create"
java.net.UnknownHostException: Failed to resolve 'account-service' [A(1), AAAA(28)] after 4 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoError] :
	reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
Error has been observed at the following site(s):
	*__FluxOnErrorResume$ResumeSubscriber.onError ⇢ at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
	*__________________________Mono.onErrorResume ⇢ at reactor.netty.transport.TransportConnector.lambda$connect$6(TransportConnector.java:166)
	*________________________________Mono.flatMap ⇢ at reactor.netty.transport.TransportConnector.connect(TransportConnector.java:165)
	*_________________________________Mono.create ⇢ at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator.connectChannel(DefaultPooledConnectionProvider.java:537)
	*_________________________________Mono.create ⇢ at reactor.netty.resources.PooledConnectionProvider.acquire(PooledConnectionProvider.java:130)
	*_________________________________Mono.create ⇢ at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect.subscribe(HttpClientConnect.java:211)
	|_                             Mono.retryWhen ⇢ at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect.subscribe(HttpClientConnect.java:282)
	*______________________________Flux.concatMap ⇢ at reactor.util.retry.RetrySpec.lambda$generateCompanion$6(RetrySpec.java:360)
	|_                           Flux.onErrorStop ⇢ at reactor.util.retry.RetrySpec.lambda$generateCompanion$6(RetrySpec.java:379)
	*________________________Flux.deferContextual ⇢ at reactor.util.retry.RetrySpec.generateCompanion(RetrySpec.java:357)
	*____________________________Mono.flatMapMany ⇢ at reactor.netty.http.client.HttpClientFinalizer.responseConnection(HttpClientFinalizer.java:102)
	*____________________________Mono.flatMapMany ⇢ at org.springframework.cloud.gateway.filter.NettyRoutingFilter.filter(NettyRoutingFilter.java:134)
	*___________________________________Flux.then ⇢ at org.springframework.cloud.gateway.filter.NettyRoutingFilter.filter(NettyRoutingFilter.java:200)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.cloud.gateway.filter.GatewayMetricsFilter.filter(GatewayMetricsFilter.java:76)
	|_                             Mono.doOnError ⇢ at org.springframework.cloud.gateway.filter.GatewayMetricsFilter.filter(GatewayMetricsFilter.java:77)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*___________________________________Mono.then ⇢ at org.springframework.cloud.gateway.filter.NettyWriteResponseFilter.filter(NettyWriteResponseFilter.java:69)
	|_                            Mono.doOnCancel ⇢ at org.springframework.cloud.gateway.filter.NettyWriteResponseFilter.filter(NettyWriteResponseFilter.java:101)
	|_                             Mono.doOnError ⇢ at org.springframework.cloud.gateway.filter.NettyWriteResponseFilter.filter(NettyWriteResponseFilter.java:102)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	|_                             Mono.doFinally ⇢ at org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter.filter(RemoveCachedBodyFilter.java:29)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*___________________________________Mono.then ⇢ at org.springframework.web.reactive.result.SimpleHandlerAdapter.handle(SimpleHandlerAdapter.java:46)
	|_                         Mono.onErrorResume ⇢ at org.springframework.web.reactive.DispatcherHandler.handleResultMono(DispatcherHandler.java:168)
	|_                               Mono.flatMap ⇢ at org.springframework.web.reactive.DispatcherHandler.handleResultMono(DispatcherHandler.java:172)
	*__________________________________Mono.error ⇢ at org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.handleException(RequestMappingHandlerAdapter.java:340)
	*________________________________Mono.flatMap ⇢ at org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:154)
	*__________________________________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	|_                                 checkpoint ⇢ com.project.apigateway.filter.GlobalCorsFilter$$Lambda/0x0000014a876ad000 [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	*__________________________Mono.onErrorResume ⇢ at com.project.apigateway.filter.CachingFilter.filter(CachingFilter.java:57)
	|_                                 checkpoint ⇢ com.project.apigateway.filter.CachingFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	|_                                 checkpoint ⇢ org.springframework.cloud.gateway.filter.WeightCalculatorWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$WebFilterObservation$SimpleWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:560)
	|_                            Mono.doOnCancel ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$WebFilterObservation$SimpleWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:561)
	|_                             Mono.doOnError ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$WebFilterObservation$SimpleWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:562)
	|_                          Mono.contextWrite ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$WebFilterObservation$SimpleWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:566)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$2(ObservationWebFilterChainDecorator.java:351)
	|_                            Mono.doOnCancel ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$2(ObservationWebFilterChainDecorator.java:352)
	|_                             Mono.doOnError ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$2(ObservationWebFilterChainDecorator.java:353)
	*________________________Mono.deferContextual ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator.lambda$wrapSecured$1(ObservationWebFilterChainDecorator.java:76)
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	*__________________________Mono.switchIfEmpty ⇢ at org.springframework.security.web.server.authorization.AuthorizationWebFilter.filter(AuthorizationWebFilter.java:56)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ AuthorizationWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_                         Mono.onErrorResume ⇢ at org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter.filter(ExceptionTranslationWebFilter.java:53)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ ExceptionTranslationWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	*___________________________________Mono.then ⇢ at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:63)
	*__________________________Mono.switchIfEmpty ⇢ at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:63)
	|_                                   Mono.map ⇢ at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:64)
	|_                               Mono.flatMap ⇢ at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:65)
	|_                               Mono.flatMap ⇢ at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:66)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ LogoutWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	*________________________________Mono.flatMap ⇢ at org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter.filter(ServerRequestCacheWebFilter.java:41)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ ServerRequestCacheWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_                          Mono.contextWrite ⇢ at org.springframework.security.web.server.context.ReactorContextWebFilter.filter(ReactorContextWebFilter.java:48)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ CorsWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_                          Mono.contextWrite ⇢ at org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter.filter(ServerHttpSecurity.java:4047)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:367)
	|_                            Mono.doOnCancel ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:368)
	|_                             Mono.doOnError ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:369)
	|_                          Mono.contextWrite ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:373)
	*________________________Mono.deferContextual ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:193)
	|_                                 checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	*________________________________Mono.flatMap ⇢ at org.springframework.security.web.server.WebFilterChainProxy.filterFirewalledExchange(WebFilterChainProxy.java:78)
	*________________________________Mono.flatMap ⇢ at org.springframework.security.web.server.WebFilterChainProxy.filter(WebFilterChainProxy.java:65)
	|_                         Mono.onErrorResume ⇢ at org.springframework.security.web.server.WebFilterChainProxy.filter(WebFilterChainProxy.java:66)
	|_                                 checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	|_                          Mono.contextWrite ⇢ at com.project.apigateway.security.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:51)
	|_                                 checkpoint ⇢ com.project.apigateway.security.JwtAuthenticationFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	|_                             Mono.doOnError ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:84)
	|_                         Mono.onErrorResume ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:85)
	|_                             Mono.doOnError ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:84)
	|_                         Mono.onErrorResume ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:85)
	|_                             Mono.doOnError ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:84)
	*__________________________________Mono.error ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler$CheckpointInsertingHandler.handle(ExceptionHandlingWebHandler.java:106)
	|_                                 checkpoint ⇢ HTTP POST "/accounts/api/v1/create" [ExceptionHandlingWebHandler]
	*__________________________________Mono.error ⇢ at org.springframework.cloud.gateway.filter.headers.observation.ObservationClosingWebExceptionHandler.handle(ObservationClosingWebExceptionHandler.java:53)
Original Stack Trace:
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-03-29 13:56:30 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=account-service-route),tag(routeUri=http://account-service:8083),tag(status=INTERNAL_SERVER_ERROR)]
2025-03-29 13:56:49 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Storing exception in LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=null, error='Command timed out after 3 second(s)'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 13:56:49 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Unexpected exception during request: java.net.SocketException: Connection reset
java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:403)
	at java.base/sun.nio.ch.SocketChannelImpl.implRead(SocketChannelImpl.java:435)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:493)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:356)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-03-29 13:56:49 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive()
2025-03-29 13:56:49 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-03-29 13:56:49 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] notifyQueuedCommands adding 0 command(s) to buffer
2025-03-29 13:56:49 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive() done
2025-03-29 13:56:49 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-03-29 13:56:49 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-03-29 13:56:49 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 1, delay 1ms
2025-03-29 13:56:49 | DEBUG | [channel=0x5f7aa1a8, /192.168.102.3:56451 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelUnregistered()
2025-03-29 13:56:49 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-03-29 13:56:49 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 13:56:49 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-03-29 13:56:49 | DEBUG | [channel=0xe6f9b3f4, [id: 0x82925893] (inactive), epid=0x1, chid=0xa] channelRegistered()
2025-03-29 13:56:49 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xa] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 13:56:49 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:56:50 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xa] Received: 705 bytes, 1 commands in the stack
2025-03-29 13:56:50 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xa] Stack contains: 1 commands
2025-03-29 13:56:50 | DEBUG | Decode done, empty stack: true
2025-03-29 13:56:50 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xa] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 13:56:50 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xa] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-03-29 13:56:50 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:56:50 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 13:56:50 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xa] Received: 10 bytes, 2 commands in the stack
2025-03-29 13:56:50 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xa] Stack contains: 2 commands
2025-03-29 13:56:50 | DEBUG | Decode done, empty stack: true
2025-03-29 13:56:50 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xa] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 13:56:50 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xa] Stack contains: 1 commands
2025-03-29 13:56:50 | DEBUG | Decode done, empty stack: true
2025-03-29 13:56:50 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xa] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 13:56:50 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xa] channelActive()
2025-03-29 13:56:50 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-03-29 13:56:50 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-03-29 13:56:50 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-03-29 13:56:50 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-03-29 13:56:50 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-03-29 13:56:50 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xa] channelActive() done
2025-03-29 13:56:50 | INFO  | Reconnected to redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694, Channel channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-03-29 14:00:53 | TRACE | Weights attr: {}
2025-03-29 14:00:53 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:00:53 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:00:53 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] write() done
2025-03-29 14:00:53 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x6] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 14:00:53 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:00:54 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x6] Received: 4 bytes, 1 commands in the stack
2025-03-29 14:00:54 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x6] Stack contains: 1 commands
2025-03-29 14:00:54 | DEBUG | Decode done, empty stack: true
2025-03-29 14:00:54 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x6] Completing command LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 14:00:54 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-03-29 14:00:54 | DEBUG | Route matched: user-service-route
2025-03-29 14:00:54 | DEBUG | Mapping [Exchange: POST http://localhost:8080/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 14:00:54 | DEBUG | [aa57f602-22] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 14:00:54 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 14:00:54 | TRACE | RouteToRequestUrlFilter start
2025-03-29 14:00:54 | DEBUG | Will instrument the HTTP request headers [X-Forwarded-For:"203.0.113.50,0:0:0:0:0:0:0:1", Content-Type:"application/json", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"432d9634-a120-4a6f-a9d4-60d442491c2c", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"69", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54785"", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:00:54 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.228E-4, duration(nanos)=122800.0, startTimeNanos=757152132509400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@37e6127a'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5e9c3758} created for the request. New headers are [X-Forwarded-For:"203.0.113.50,0:0:0:0:0:0:0:1", Content-Type:"application/json", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"432d9634-a120-4a6f-a9d4-60d442491c2c", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"69", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54785"", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:00:54 | TRACE | outbound route: 4489322a, inbound: [aa57f602-22] 
2025-03-29 14:00:55 | DEBUG | Will instrument the response
2025-03-29 14:00:55 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.039155, duration(nanos)=1.039155E9, startTimeNanos=757152132509400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@37e6127a'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5e9c3758}
2025-03-29 14:00:55 | TRACE | NettyWriteResponseFilter start inbound: 4489322a, outbound: [aa57f602-22] 
2025-03-29 14:00:55 | DEBUG | dispatching command SubscriptionCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:00:55 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() writeAndFlush command SubscriptionCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:00:55 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() done
2025-03-29 14:00:55 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x7] write(ctx, SubscriptionCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 14:00:55 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-03-29 14:00:55 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:00:55 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x7] Received: 5 bytes, 1 commands in the stack
2025-03-29 14:00:55 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x7] Stack contains: 1 commands
2025-03-29 14:00:55 | DEBUG | Decode done, empty stack: true
2025-03-29 14:00:55 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x7] Completing command LatencyMeteredCommand [type=SET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 14:01:07 | TRACE | Weights attr: {}
2025-03-29 14:01:07 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:01:07 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:01:07 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] write() done
2025-03-29 14:01:07 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x8] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 14:01:07 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:01:08 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x8] Received: 4 bytes, 1 commands in the stack
2025-03-29 14:01:08 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x8] Stack contains: 1 commands
2025-03-29 14:01:08 | DEBUG | Decode done, empty stack: true
2025-03-29 14:01:08 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x8] Completing command LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 14:01:08 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:01:08 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:01:08 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/create"
2025-03-29 14:01:08 | DEBUG | Route matched: account-service-route
2025-03-29 14:01:08 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/api/v1/create] to Route{id='account-service-route', uri=http://account-service:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 14:01:08 | DEBUG | [aa57f602-23] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 14:01:08 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 14:01:08 | TRACE | RouteToRequestUrlFilter start
2025-03-29 14:01:08 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"4c6090bf-8ab4-49b9-b0ce-1b804f88e14e", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54785"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:01:08 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://account-service:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/create'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.155E-4, duration(nanos)=115500.0, startTimeNanos=757166322478200}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@442dca3'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5aa45250} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"4c6090bf-8ab4-49b9-b0ce-1b804f88e14e", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54785"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:01:08 | ERROR | Redis connection error: Failed to resolve 'account-service' [A(1), AAAA(28)] after 4 queries 
2025-03-29 14:01:08 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:01:08 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:01:08 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/create"
2025-03-29 14:01:08 | DEBUG | Route matched: account-service-route
2025-03-29 14:01:08 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/api/v1/create] to Route{id='account-service-route', uri=http://account-service:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 14:01:08 | DEBUG | [aa57f602-23] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 14:01:08 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 14:01:08 | TRACE | RouteToRequestUrlFilter start
2025-03-29 14:01:08 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://account-service:8083),tag(status=OK)]
2025-03-29 14:01:08 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://account-service:8083),tag(status=OK)]
2025-03-29 14:02:13 | TRACE | Weights attr: {}
2025-03-29 14:02:13 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:02:13 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:02:13 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] write() done
2025-03-29 14:02:13 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x9] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 14:02:13 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:02:13 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x9] Received: 4 bytes, 1 commands in the stack
2025-03-29 14:02:13 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x9] Stack contains: 1 commands
2025-03-29 14:02:13 | DEBUG | Decode done, empty stack: true
2025-03-29 14:02:13 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x9] Completing command LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 14:02:13 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:02:13 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:02:13 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/create"
2025-03-29 14:02:13 | DEBUG | Route matched: account-service-route
2025-03-29 14:02:13 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/api/v1/create] to Route{id='account-service-route', uri=http://account-service:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 14:02:13 | DEBUG | [475ae8e3-24] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 14:02:13 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 14:02:13 | TRACE | RouteToRequestUrlFilter start
2025-03-29 14:02:13 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"7766721e-92b3-4986-91c3-61a0ebe57d2a", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54799"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:02:13 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://account-service:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/create'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.112E-4, duration(nanos)=111200.0, startTimeNanos=757231916347700}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6b065316'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@345185fa} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"7766721e-92b3-4986-91c3-61a0ebe57d2a", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54799"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:02:13 | ERROR | Redis connection error: Failed to resolve 'account-service' [A(1), AAAA(28)] after 4 queries 
2025-03-29 14:02:13 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:02:13 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:02:13 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/create"
2025-03-29 14:02:13 | DEBUG | Route matched: account-service-route
2025-03-29 14:02:13 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/api/v1/create] to Route{id='account-service-route', uri=http://account-service:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 14:02:13 | DEBUG | [475ae8e3-24] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 14:02:13 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 14:02:13 | TRACE | RouteToRequestUrlFilter start
2025-03-29 14:02:13 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://account-service:8083),tag(status=OK)]
2025-03-29 14:02:13 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://account-service:8083),tag(status=OK)]
2025-03-29 14:02:22 | TRACE | Weights attr: {}
2025-03-29 14:02:22 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:02:22 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:02:22 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-03-29 14:02:22 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xa] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 14:02:22 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:02:22 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xa] Received: 4 bytes, 1 commands in the stack
2025-03-29 14:02:22 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xa] Stack contains: 1 commands
2025-03-29 14:02:22 | DEBUG | Decode done, empty stack: true
2025-03-29 14:02:22 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xa] Completing command LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 14:02:22 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/createa"
2025-03-29 14:02:22 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/createa"
2025-03-29 14:02:22 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/createa"
2025-03-29 14:02:22 | DEBUG | Route matched: account-service-route
2025-03-29 14:02:22 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/api/v1/createa] to Route{id='account-service-route', uri=http://account-service:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 14:02:22 | DEBUG | [475ae8e3-25] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 14:02:22 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 14:02:22 | TRACE | RouteToRequestUrlFilter start
2025-03-29 14:02:22 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"15f8f263-84ba-40a1-bb35-200b6d0f5d04", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54799"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:02:22 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://account-service:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/createa'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.2E-5, duration(nanos)=92000.0, startTimeNanos=757240513609100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3922eb7c'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@63b2df7} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"15f8f263-84ba-40a1-bb35-200b6d0f5d04", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54799"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:02:22 | ERROR | Redis connection error: Failed to resolve 'account-service' [A(1), AAAA(28)] after 4 queries 
2025-03-29 14:02:22 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/createa"
2025-03-29 14:02:22 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/createa"
2025-03-29 14:02:22 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/createa"
2025-03-29 14:02:22 | DEBUG | Route matched: account-service-route
2025-03-29 14:02:22 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/api/v1/createa] to Route{id='account-service-route', uri=http://account-service:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 14:02:22 | DEBUG | [475ae8e3-25] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 14:02:22 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 14:02:22 | TRACE | RouteToRequestUrlFilter start
2025-03-29 14:02:22 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://account-service:8083),tag(status=OK)]
2025-03-29 14:02:22 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://account-service:8083),tag(status=OK)]
2025-03-29 14:02:26 | TRACE | Weights attr: {}
2025-03-29 14:02:26 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:02:26 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:02:26 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] write() done
2025-03-29 14:02:26 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x6] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 14:02:26 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:02:26 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x6] Received: 4 bytes, 1 commands in the stack
2025-03-29 14:02:26 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x6] Stack contains: 1 commands
2025-03-29 14:02:26 | DEBUG | Decode done, empty stack: true
2025-03-29 14:02:26 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x6] Completing command LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 14:02:26 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:02:26 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:02:26 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/create"
2025-03-29 14:02:26 | DEBUG | Route matched: account-service-route
2025-03-29 14:02:26 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/api/v1/create] to Route{id='account-service-route', uri=http://account-service:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 14:02:26 | DEBUG | [475ae8e3-26] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 14:02:26 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 14:02:26 | TRACE | RouteToRequestUrlFilter start
2025-03-29 14:02:26 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"8cd10c6c-463b-49f4-ad8d-7c6c9f3655e9", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54799"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:02:26 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://account-service:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/create'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.145E-4, duration(nanos)=114500.0, startTimeNanos=757244993615600}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@45e80967'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1ae3d0b8} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"8cd10c6c-463b-49f4-ad8d-7c6c9f3655e9", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54799"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:02:27 | ERROR | Redis connection error: Failed to resolve 'account-service' [A(1), AAAA(28)] after 4 queries 
2025-03-29 14:02:27 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:02:27 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:02:27 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/create"
2025-03-29 14:02:27 | DEBUG | Route matched: account-service-route
2025-03-29 14:02:27 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/api/v1/create] to Route{id='account-service-route', uri=http://account-service:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 14:02:27 | DEBUG | [475ae8e3-26] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 14:02:27 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 14:02:27 | TRACE | RouteToRequestUrlFilter start
2025-03-29 14:02:27 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://account-service:8083),tag(status=OK)]
2025-03-29 14:02:27 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://account-service:8083),tag(status=OK)]
2025-03-29 14:04:23 | TRACE | Weights attr: {}
2025-03-29 14:04:23 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:04:23 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:04:23 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() done
2025-03-29 14:04:23 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x7] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 14:04:23 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:04:23 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x7] Received: 4 bytes, 1 commands in the stack
2025-03-29 14:04:23 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x7] Stack contains: 1 commands
2025-03-29 14:04:23 | DEBUG | Decode done, empty stack: true
2025-03-29 14:04:23 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x7] Completing command LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 14:04:23 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:04:23 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:04:23 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/create"
2025-03-29 14:04:23 | DEBUG | Route matched: account-service-route
2025-03-29 14:04:23 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/api/v1/create] to Route{id='account-service-route', uri=http://account-service:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 14:04:23 | DEBUG | [ee749f58-27] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 14:04:23 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 14:04:23 | TRACE | RouteToRequestUrlFilter start
2025-03-29 14:04:23 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"197febdb-d604-4f29-8a91-748c01e4f5ee", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54819"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:04:23 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://account-service:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/create'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.19E-4, duration(nanos)=119000.0, startTimeNanos=757361733081100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2e130d7b'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1f618ea5} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"197febdb-d604-4f29-8a91-748c01e4f5ee", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54819"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:04:23 | ERROR | Redis connection error: Failed to resolve 'account-service' [A(1), AAAA(28)] after 4 queries 
2025-03-29 14:04:23 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:04:23 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:04:23 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/create"
2025-03-29 14:04:23 | DEBUG | Route matched: account-service-route
2025-03-29 14:04:23 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/api/v1/create] to Route{id='account-service-route', uri=http://account-service:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 14:04:23 | DEBUG | [ee749f58-27] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 14:04:23 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 14:04:23 | TRACE | RouteToRequestUrlFilter start
2025-03-29 14:04:23 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://account-service:8083),tag(status=OK)]
2025-03-29 14:04:23 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://account-service:8083),tag(status=OK)]
2025-03-29 14:04:52 | TRACE | Weights attr: {}
2025-03-29 14:04:52 | DEBUG | dispatching command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:04:52 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] write() writeAndFlush command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:04:52 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x8] write(ctx, SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 14:04:52 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] write() done
2025-03-29 14:04:52 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:04:52 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x8] Received: 4 bytes, 1 commands in the stack
2025-03-29 14:04:52 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x8] Stack contains: 1 commands
2025-03-29 14:04:52 | DEBUG | Decode done, empty stack: true
2025-03-29 14:04:52 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x8] Completing command LatencyMeteredCommand [type=EXISTS, output=IntegerOutput [output=0, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 14:04:52 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:04:52 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:04:52 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/create"
2025-03-29 14:04:52 | DEBUG | Route matched: account-service-route
2025-03-29 14:04:52 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/api/v1/create] to Route{id='account-service-route', uri=http://account-service:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 14:04:52 | DEBUG | [ee749f58-28] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 14:04:52 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 14:04:52 | TRACE | RouteToRequestUrlFilter start
2025-03-29 14:04:52 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"204f97d6-695f-4373-ad9a-9355e5fac705", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54819"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:04:52 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://account-service:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/create'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.27E-4, duration(nanos)=127000.0, startTimeNanos=757390539156100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5729359'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@7dbc7775} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"204f97d6-695f-4373-ad9a-9355e5fac705", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54819"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:04:52 | ERROR | Redis connection error: Failed to resolve 'account-service' [A(1), AAAA(28)] after 4 queries 
2025-03-29 14:04:52 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:04:52 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:04:52 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/create"
2025-03-29 14:04:52 | DEBUG | Route matched: account-service-route
2025-03-29 14:04:52 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/api/v1/create] to Route{id='account-service-route', uri=http://account-service:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 14:04:52 | DEBUG | [ee749f58-28] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@25e796fe
2025-03-29 14:04:52 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2e013ba1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@dd060be}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@7178d811}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@430106cf}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2aac6fa7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2d8c729f}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@29a1ec65}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@647af13d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@38fc34fd}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@740ee00f}, order = 2147483647]]
2025-03-29 14:04:52 | TRACE | RouteToRequestUrlFilter start
2025-03-29 14:04:52 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://account-service:8083),tag(status=OK)]
2025-03-29 14:04:52 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://account-service:8083),tag(status=OK)]
2025-03-29 14:05:25 | DEBUG | Stopped RedisMessageListenerContainer
2025-03-29 14:05:25 | INFO  | Commencing graceful shutdown. Waiting for active requests to complete
2025-03-29 14:05:25 | INFO  | Graceful shutdown complete
2025-03-29 14:05:26 | DEBUG | closeAsync()
2025-03-29 14:05:26 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] closeAsync()
2025-03-29 14:05:26 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x9] channelInactive()
2025-03-29 14:05:26 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] deactivating endpoint handler
2025-03-29 14:05:26 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x9] channelInactive() done
2025-03-29 14:05:26 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-03-29 14:05:26 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-03-29 14:05:26 | DEBUG | [channel=0x0a463815, /192.168.102.3:54751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x9] channelUnregistered()
2025-03-29 14:05:26 | DEBUG | closeAsync()
2025-03-29 14:05:26 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] closeAsync()
2025-03-29 14:05:26 | DEBUG | closeAsync()
2025-03-29 14:05:26 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] closeAsync()
2025-03-29 14:05:26 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xa] channelInactive()
2025-03-29 14:05:26 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-03-29 14:05:26 | DEBUG | closeAsync()
2025-03-29 14:05:26 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xa] channelInactive() done
2025-03-29 14:05:26 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] closeAsync()
2025-03-29 14:05:26 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-03-29 14:05:26 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-03-29 14:05:26 | DEBUG | closeAsync()
2025-03-29 14:05:26 | DEBUG | [channel=0xe6f9b3f4, /192.168.102.3:54758 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xa] channelUnregistered()
2025-03-29 14:05:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] closeAsync()
2025-03-29 14:05:26 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x7] channelInactive()
2025-03-29 14:05:26 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] deactivating endpoint handler
2025-03-29 14:05:26 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x6] channelInactive()
2025-03-29 14:05:26 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x7] channelInactive() done
2025-03-29 14:05:26 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] deactivating endpoint handler
2025-03-29 14:05:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x8] channelInactive()
2025-03-29 14:05:26 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x6] channelInactive() done
2025-03-29 14:05:26 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-03-29 14:05:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] deactivating endpoint handler
2025-03-29 14:05:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x8] channelInactive() done
2025-03-29 14:05:26 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-03-29 14:05:26 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-03-29 14:05:26 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-03-29 14:05:26 | DEBUG | [channel=0x678bb405, /192.168.102.3:54603 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x6] channelUnregistered()
2025-03-29 14:05:26 | DEBUG | [channel=0x8dbe5331, /192.168.102.3:54627 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x7] channelUnregistered()
2025-03-29 14:05:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-03-29 14:05:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-03-29 14:05:26 | DEBUG | [channel=0x2370b988, /192.168.102.3:54686 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x8] channelUnregistered()
2025-03-29 14:05:26 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-03-29 14:05:26 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-03-29 14:05:26 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-03-29 14:05:26 | DEBUG | Release executor io.netty.channel.nio.NioEventLoopGroup@13dd7fdb
2025-03-29 14:05:46 | INFO  | HV000001: Hibernate Validator 8.0.2.Final
2025-03-29 14:05:46 | INFO  | Starting ApiGatewayApplication using Java 23.0.2 with PID 5208 (D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE\API-gateway\target\classes started by hiepg in D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE)
2025-03-29 14:05:46 | DEBUG | Running with Spring Boot v3.4.3, Spring v6.2.3
2025-03-29 14:05:46 | INFO  | The following 1 profile is active: "local"
2025-03-29 14:05:49 | TRACE | Condition GatewayAutoConfiguration.OnVerboseDisabledCondition on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration#gatewayLegacyControllerEndpoint did not match due to NoneNestedConditions 1 matched 0 did not; NestedCondition on GatewayAutoConfiguration.OnVerboseDisabledCondition.VerboseDisabled @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#routingFilter matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#nettyWriteResponseFilter matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyWebSocketClient matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyRequestUpgradeStrategy matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeCachedBodyFilter matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#routeToRequestUrlFilter matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardRoutingFilter matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardPathFilter matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#webSocketService matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#websocketRoutingFilter matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightCalculatorWebFilter matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#afterRoutePredicateFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#beforeRoutePredicateFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#betweenRoutePredicateFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cookieRoutePredicateFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#headerRoutePredicateFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#hostRoutePredicateFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#methodRoutePredicateFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#pathRoutePredicateFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#queryRoutePredicateFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#readBodyPredicateFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightRoutePredicateFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeadersIfNotPresentGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#redirectToGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeJsonAttributesResponseBodyGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#principalNameKeyResolver matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestRateLimiterGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#retryGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setPathGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setStatusGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched
2025-03-29 14:05:49 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteRequestParameterGatewayFilterFactory matched
2025-03-29 14:05:50 | INFO  | Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-29 14:05:50 | INFO  | Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-29 14:05:50 | INFO  | Finished Spring Data repository scanning in 36 ms. Found 0 Redis repository interfaces.
2025-03-29 14:05:51 | INFO  | BeanFactory id=278e83b6-d961-3f2d-9f24-8badf58b2fda
2025-03-29 14:05:52 | DEBUG | Starting with netty's non-blocking DNS resolver library
2025-03-29 14:05:52 | DEBUG | Starting without optional kqueue library
2025-03-29 14:05:52 | DEBUG | Starting without optional io_uring library
2025-03-29 14:05:52 | DEBUG | Starting without optional epoll library
2025-03-29 14:05:52 | DEBUG | -Dio.netty.eventLoopThreads: 4
2025-03-29 14:05:52 | DEBUG | Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-03-29 14:05:52 | DEBUG | Starting with JFR support
2025-03-29 14:05:52 | INFO  | 

Using generated security password: a0237685-e42a-4dc4-8602-13b683c2d067

2025-03-29 14:05:54 | DEBUG | Routes supplied from Gateway Properties: [RouteDefinition{id='user-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/users/**}}], filters=[], uri=http://localhost:8081, order=0, metadata={}, enabled=true}, RouteDefinition{id='wallet-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/wallets/**}}], filters=[], uri=http://localhost:8082, order=0, metadata={}, enabled=true}, RouteDefinition{id='account-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/accounts/**}}], filters=[], uri=http://account-service:8083, order=0, metadata={}, enabled=true}, RouteDefinition{id='trading-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/trading/**}}], filters=[], uri=http://trading-service:8084, order=0, metadata={}, enabled=true}]
2025-03-29 14:05:54 | INFO  | Loaded RoutePredicateFactory [After]
2025-03-29 14:05:54 | INFO  | Loaded RoutePredicateFactory [Before]
2025-03-29 14:05:54 | INFO  | Loaded RoutePredicateFactory [Between]
2025-03-29 14:05:54 | INFO  | Loaded RoutePredicateFactory [Cookie]
2025-03-29 14:05:54 | INFO  | Loaded RoutePredicateFactory [Header]
2025-03-29 14:05:54 | INFO  | Loaded RoutePredicateFactory [Host]
2025-03-29 14:05:54 | INFO  | Loaded RoutePredicateFactory [Method]
2025-03-29 14:05:54 | INFO  | Loaded RoutePredicateFactory [Path]
2025-03-29 14:05:54 | INFO  | Loaded RoutePredicateFactory [Query]
2025-03-29 14:05:54 | INFO  | Loaded RoutePredicateFactory [ReadBody]
2025-03-29 14:05:54 | INFO  | Loaded RoutePredicateFactory [RemoteAddr]
2025-03-29 14:05:54 | INFO  | Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-03-29 14:05:54 | INFO  | Loaded RoutePredicateFactory [Weight]
2025-03-29 14:05:54 | INFO  | Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-03-29 14:05:54 | INFO  | Exposing 2 endpoints beneath base path '/actuator'
2025-03-29 14:05:55 | INFO  | Netty started on port 8080 (http)
2025-03-29 14:05:55 | DEBUG | Starting RedisMessageListenerContainer...
2025-03-29 14:05:55 | DEBUG | Postpone listening for Redis messages until actual listeners are added
2025-03-29 14:05:56 | DEBUG | RouteDefinition user-service-route applying {_genkey_0=/users/**} to Path
2025-03-29 14:05:56 | DEBUG | RouteDefinition matched: user-service-route
2025-03-29 14:05:56 | DEBUG | RouteDefinition wallet-service-route applying {_genkey_0=/wallets/**} to Path
2025-03-29 14:05:56 | DEBUG | RouteDefinition matched: wallet-service-route
2025-03-29 14:05:56 | DEBUG | RouteDefinition account-service-route applying {_genkey_0=/accounts/**} to Path
2025-03-29 14:05:56 | DEBUG | RouteDefinition matched: account-service-route
2025-03-29 14:05:56 | DEBUG | RouteDefinition trading-service-route applying {_genkey_0=/trading/**} to Path
2025-03-29 14:05:56 | DEBUG | RouteDefinition matched: trading-service-route
2025-03-29 14:05:56 | DEBUG | New routes count: 4
2025-03-29 14:05:56 | INFO  | Started ApiGatewayApplication in 10.744 seconds (process running for 13.545)
2025-03-29 14:06:07 | TRACE | Weights attr: {}
2025-03-29 14:06:07 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:06:07 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:06:07 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/create"
2025-03-29 14:06:07 | DEBUG | Route matched: account-service-route
2025-03-29 14:06:07 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/api/v1/create] to Route{id='account-service-route', uri=http://account-service:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 14:06:07 | DEBUG | [1d1ac426-1] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@667dd150
2025-03-29 14:06:07 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@5fd4e67f}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@4cb82b09}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@79424f25}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5305f936}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@7d90764a}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@59b1edab}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@6843fdc4}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@2b1a1a37}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@70cd122}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@3855b27e}, order = 2147483647]]
2025-03-29 14:06:07 | TRACE | RouteToRequestUrlFilter start
2025-03-29 14:06:07 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"872c4fc2-663a-4c46-93ff-37fc3c9ce5f9", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54851"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:06:07 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://account-service:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/create'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0056851, duration(nanos)=5685100.0, startTimeNanos=757465531720500}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4afcdafa'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@7c20bc0d} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"872c4fc2-663a-4c46-93ff-37fc3c9ce5f9", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54851"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:06:07 | DEBUG | An exception occurred and observation was not previously stopped, will stop it. The exception was [java.net.UnknownHostException: Failed to resolve 'account-service' [A(1), AAAA(28)] after 4 queries ]
2025-03-29 14:06:07 | ERROR | [1d1ac426-1]  500 Server Error for HTTP POST "/accounts/api/v1/create"
java.net.UnknownHostException: Failed to resolve 'account-service' [A(1), AAAA(28)] after 4 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoError] :
	reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
Error has been observed at the following site(s):
	*__FluxOnErrorResume$ResumeSubscriber.onError ⇢ at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
	*__________________________Mono.onErrorResume ⇢ at reactor.netty.transport.TransportConnector.lambda$connect$6(TransportConnector.java:166)
	*________________________________Mono.flatMap ⇢ at reactor.netty.transport.TransportConnector.connect(TransportConnector.java:165)
	*_________________________________Mono.create ⇢ at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator.connectChannel(DefaultPooledConnectionProvider.java:537)
	*_________________________________Mono.create ⇢ at reactor.netty.resources.PooledConnectionProvider.acquire(PooledConnectionProvider.java:130)
	*_________________________________Mono.create ⇢ at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect.subscribe(HttpClientConnect.java:211)
	|_                             Mono.retryWhen ⇢ at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect.subscribe(HttpClientConnect.java:282)
	*______________________________Flux.concatMap ⇢ at reactor.util.retry.RetrySpec.lambda$generateCompanion$6(RetrySpec.java:360)
	|_                           Flux.onErrorStop ⇢ at reactor.util.retry.RetrySpec.lambda$generateCompanion$6(RetrySpec.java:379)
	*________________________Flux.deferContextual ⇢ at reactor.util.retry.RetrySpec.generateCompanion(RetrySpec.java:357)
	*____________________________Mono.flatMapMany ⇢ at reactor.netty.http.client.HttpClientFinalizer.responseConnection(HttpClientFinalizer.java:102)
	*____________________________Mono.flatMapMany ⇢ at org.springframework.cloud.gateway.filter.NettyRoutingFilter.filter(NettyRoutingFilter.java:134)
	*___________________________________Flux.then ⇢ at org.springframework.cloud.gateway.filter.NettyRoutingFilter.filter(NettyRoutingFilter.java:200)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.cloud.gateway.filter.GatewayMetricsFilter.filter(GatewayMetricsFilter.java:76)
	|_                             Mono.doOnError ⇢ at org.springframework.cloud.gateway.filter.GatewayMetricsFilter.filter(GatewayMetricsFilter.java:77)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*___________________________________Mono.then ⇢ at org.springframework.cloud.gateway.filter.NettyWriteResponseFilter.filter(NettyWriteResponseFilter.java:69)
	|_                            Mono.doOnCancel ⇢ at org.springframework.cloud.gateway.filter.NettyWriteResponseFilter.filter(NettyWriteResponseFilter.java:101)
	|_                             Mono.doOnError ⇢ at org.springframework.cloud.gateway.filter.NettyWriteResponseFilter.filter(NettyWriteResponseFilter.java:102)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	|_                             Mono.doFinally ⇢ at org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter.filter(RemoveCachedBodyFilter.java:29)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*___________________________________Mono.then ⇢ at org.springframework.web.reactive.result.SimpleHandlerAdapter.handle(SimpleHandlerAdapter.java:46)
	|_                         Mono.onErrorResume ⇢ at org.springframework.web.reactive.DispatcherHandler.handleResultMono(DispatcherHandler.java:168)
	|_                               Mono.flatMap ⇢ at org.springframework.web.reactive.DispatcherHandler.handleResultMono(DispatcherHandler.java:172)
	*__________________________________Mono.error ⇢ at org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.handleException(RequestMappingHandlerAdapter.java:340)
	*________________________________Mono.flatMap ⇢ at org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:154)
	*__________________________________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	|_                                 checkpoint ⇢ com.project.apigateway.filter.GlobalCorsFilter$$Lambda/0x00000185a96ab0f0 [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	|_                                 checkpoint ⇢ org.springframework.cloud.gateway.filter.WeightCalculatorWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$WebFilterObservation$SimpleWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:560)
	|_                            Mono.doOnCancel ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$WebFilterObservation$SimpleWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:561)
	|_                             Mono.doOnError ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$WebFilterObservation$SimpleWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:562)
	|_                          Mono.contextWrite ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$WebFilterObservation$SimpleWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:566)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$2(ObservationWebFilterChainDecorator.java:351)
	|_                            Mono.doOnCancel ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$2(ObservationWebFilterChainDecorator.java:352)
	|_                             Mono.doOnError ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$2(ObservationWebFilterChainDecorator.java:353)
	*________________________Mono.deferContextual ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator.lambda$wrapSecured$1(ObservationWebFilterChainDecorator.java:76)
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	*__________________________Mono.switchIfEmpty ⇢ at org.springframework.security.web.server.authorization.AuthorizationWebFilter.filter(AuthorizationWebFilter.java:56)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ AuthorizationWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_                         Mono.onErrorResume ⇢ at org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter.filter(ExceptionTranslationWebFilter.java:53)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ ExceptionTranslationWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	*___________________________________Mono.then ⇢ at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:63)
	*__________________________Mono.switchIfEmpty ⇢ at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:63)
	|_                                   Mono.map ⇢ at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:64)
	|_                               Mono.flatMap ⇢ at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:65)
	|_                               Mono.flatMap ⇢ at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:66)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ LogoutWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	*________________________________Mono.flatMap ⇢ at org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter.filter(ServerRequestCacheWebFilter.java:41)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ ServerRequestCacheWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_                          Mono.contextWrite ⇢ at org.springframework.security.web.server.context.ReactorContextWebFilter.filter(ReactorContextWebFilter.java:48)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ CorsWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_                          Mono.contextWrite ⇢ at org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter.filter(ServerHttpSecurity.java:4047)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:367)
	|_                            Mono.doOnCancel ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:368)
	|_                             Mono.doOnError ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:369)
	|_                          Mono.contextWrite ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:373)
	*________________________Mono.deferContextual ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:193)
	|_                                 checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	*________________________________Mono.flatMap ⇢ at org.springframework.security.web.server.WebFilterChainProxy.filterFirewalledExchange(WebFilterChainProxy.java:78)
	*________________________________Mono.flatMap ⇢ at org.springframework.security.web.server.WebFilterChainProxy.filter(WebFilterChainProxy.java:65)
	|_                         Mono.onErrorResume ⇢ at org.springframework.security.web.server.WebFilterChainProxy.filter(WebFilterChainProxy.java:66)
	|_                                 checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	|_                          Mono.contextWrite ⇢ at com.project.apigateway.security.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:51)
	|_                                 checkpoint ⇢ com.project.apigateway.security.JwtAuthenticationFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	|_                             Mono.doOnError ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:84)
	|_                         Mono.onErrorResume ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:85)
	|_                             Mono.doOnError ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:84)
	|_                         Mono.onErrorResume ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:85)
	|_                             Mono.doOnError ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:84)
	*__________________________________Mono.error ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler$CheckpointInsertingHandler.handle(ExceptionHandlingWebHandler.java:106)
	|_                                 checkpoint ⇢ HTTP POST "/accounts/api/v1/create" [ExceptionHandlingWebHandler]
	*__________________________________Mono.error ⇢ at org.springframework.cloud.gateway.filter.headers.observation.ObservationClosingWebExceptionHandler.handle(ObservationClosingWebExceptionHandler.java:53)
Original Stack Trace:
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-03-29 14:06:08 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=account-service-route),tag(routeUri=http://account-service:8083),tag(status=INTERNAL_SERVER_ERROR)]
2025-03-29 14:09:52 | DEBUG | Stopped RedisMessageListenerContainer
2025-03-29 14:09:52 | INFO  | Commencing graceful shutdown. Waiting for active requests to complete
2025-03-29 14:09:52 | INFO  | Graceful shutdown complete
2025-03-29 14:09:52 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-03-29 14:09:52 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-03-29 14:09:52 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-03-29 14:10:04 | INFO  | HV000001: Hibernate Validator 8.0.2.Final
2025-03-29 14:10:05 | INFO  | Starting ApiGatewayApplication using Java 23.0.2 with PID 21900 (D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE\API-gateway\target\classes started by hiepg in D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE)
2025-03-29 14:10:05 | DEBUG | Running with Spring Boot v3.4.3, Spring v6.2.3
2025-03-29 14:10:05 | INFO  | The following 1 profile is active: "local"
2025-03-29 14:10:07 | TRACE | Condition GatewayAutoConfiguration.OnVerboseDisabledCondition on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration#gatewayLegacyControllerEndpoint did not match due to NoneNestedConditions 1 matched 0 did not; NestedCondition on GatewayAutoConfiguration.OnVerboseDisabledCondition.VerboseDisabled @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#routingFilter matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#nettyWriteResponseFilter matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyWebSocketClient matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyRequestUpgradeStrategy matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeCachedBodyFilter matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#routeToRequestUrlFilter matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardRoutingFilter matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardPathFilter matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#webSocketService matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#websocketRoutingFilter matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightCalculatorWebFilter matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#afterRoutePredicateFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#beforeRoutePredicateFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#betweenRoutePredicateFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cookieRoutePredicateFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#headerRoutePredicateFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#hostRoutePredicateFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#methodRoutePredicateFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#pathRoutePredicateFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#queryRoutePredicateFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#readBodyPredicateFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightRoutePredicateFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeadersIfNotPresentGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#redirectToGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeJsonAttributesResponseBodyGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#principalNameKeyResolver matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestRateLimiterGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#retryGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setPathGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setStatusGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched
2025-03-29 14:10:07 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteRequestParameterGatewayFilterFactory matched
2025-03-29 14:10:08 | INFO  | Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-29 14:10:08 | INFO  | Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-29 14:10:08 | INFO  | Finished Spring Data repository scanning in 41 ms. Found 0 Redis repository interfaces.
2025-03-29 14:10:08 | INFO  | BeanFactory id=278e83b6-d961-3f2d-9f24-8badf58b2fda
2025-03-29 14:10:10 | DEBUG | Starting with netty's non-blocking DNS resolver library
2025-03-29 14:10:10 | DEBUG | Starting without optional kqueue library
2025-03-29 14:10:10 | DEBUG | Starting without optional io_uring library
2025-03-29 14:10:10 | DEBUG | Starting without optional epoll library
2025-03-29 14:10:10 | DEBUG | -Dio.netty.eventLoopThreads: 4
2025-03-29 14:10:10 | DEBUG | Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-03-29 14:10:10 | DEBUG | Starting with JFR support
2025-03-29 14:10:11 | INFO  | 

Using generated security password: 7070d0f0-f5a9-4718-a6d1-4324b0767798

2025-03-29 14:10:12 | DEBUG | Routes supplied from Gateway Properties: [RouteDefinition{id='user-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/users/**}}], filters=[], uri=http://localhost:8081, order=0, metadata={}, enabled=true}, RouteDefinition{id='wallet-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/wallets/**}}], filters=[], uri=http://localhost:8082, order=0, metadata={}, enabled=true}, RouteDefinition{id='account-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/accounts/**}}], filters=[], uri=http://localhost:8083, order=0, metadata={}, enabled=true}, RouteDefinition{id='trading-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/trading/**}}], filters=[], uri=http://localhost:8084, order=0, metadata={}, enabled=true}]
2025-03-29 14:10:13 | INFO  | Loaded RoutePredicateFactory [After]
2025-03-29 14:10:13 | INFO  | Loaded RoutePredicateFactory [Before]
2025-03-29 14:10:13 | INFO  | Loaded RoutePredicateFactory [Between]
2025-03-29 14:10:13 | INFO  | Loaded RoutePredicateFactory [Cookie]
2025-03-29 14:10:13 | INFO  | Loaded RoutePredicateFactory [Header]
2025-03-29 14:10:13 | INFO  | Loaded RoutePredicateFactory [Host]
2025-03-29 14:10:13 | INFO  | Loaded RoutePredicateFactory [Method]
2025-03-29 14:10:13 | INFO  | Loaded RoutePredicateFactory [Path]
2025-03-29 14:10:13 | INFO  | Loaded RoutePredicateFactory [Query]
2025-03-29 14:10:13 | INFO  | Loaded RoutePredicateFactory [ReadBody]
2025-03-29 14:10:13 | INFO  | Loaded RoutePredicateFactory [RemoteAddr]
2025-03-29 14:10:13 | INFO  | Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-03-29 14:10:13 | INFO  | Loaded RoutePredicateFactory [Weight]
2025-03-29 14:10:13 | INFO  | Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-03-29 14:10:13 | INFO  | Exposing 2 endpoints beneath base path '/actuator'
2025-03-29 14:10:15 | INFO  | Netty started on port 8080 (http)
2025-03-29 14:10:15 | DEBUG | Starting RedisMessageListenerContainer...
2025-03-29 14:10:15 | DEBUG | Postpone listening for Redis messages until actual listeners are added
2025-03-29 14:10:15 | DEBUG | RouteDefinition user-service-route applying {_genkey_0=/users/**} to Path
2025-03-29 14:10:15 | DEBUG | RouteDefinition matched: user-service-route
2025-03-29 14:10:15 | DEBUG | RouteDefinition wallet-service-route applying {_genkey_0=/wallets/**} to Path
2025-03-29 14:10:15 | DEBUG | RouteDefinition matched: wallet-service-route
2025-03-29 14:10:15 | DEBUG | RouteDefinition account-service-route applying {_genkey_0=/accounts/**} to Path
2025-03-29 14:10:15 | DEBUG | RouteDefinition matched: account-service-route
2025-03-29 14:10:15 | DEBUG | RouteDefinition trading-service-route applying {_genkey_0=/trading/**} to Path
2025-03-29 14:10:15 | DEBUG | RouteDefinition matched: trading-service-route
2025-03-29 14:10:15 | DEBUG | New routes count: 4
2025-03-29 14:10:15 | INFO  | Started ApiGatewayApplication in 12.054 seconds (process running for 15.875)
2025-03-29 14:10:23 | TRACE | Weights attr: {}
2025-03-29 14:10:23 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:10:23 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:10:23 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/create"
2025-03-29 14:10:23 | DEBUG | Route matched: account-service-route
2025-03-29 14:10:23 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/api/v1/create] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 14:10:23 | DEBUG | [0bd3d752-1] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@1324e70a
2025-03-29 14:10:23 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@e2f6a45}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@1cee3e05}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@77fb1002}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@434d001d}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@4db16677}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@24cbf894}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@6abb44cb}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@36453773}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@185a0811}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@6c19769c}, order = 2147483647]]
2025-03-29 14:10:23 | TRACE | RouteToRequestUrlFilter start
2025-03-29 14:10:23 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"2a9a7ac9-b195-4998-aa67-0285c90cb086", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54878"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:10:23 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/create'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3ce987a5', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0018475, duration(nanos)=1847500.0, startTimeNanos=757721256219100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3a14f993} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"2a9a7ac9-b195-4998-aa67-0285c90cb086", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54878"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:10:23 | TRACE | outbound route: 4b7ff408, inbound: [0bd3d752-1] 
2025-03-29 14:10:24 | DEBUG | Will instrument the response
2025-03-29 14:10:24 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/create'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3ce987a5', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.8504634, duration(nanos)=8.504634E8, startTimeNanos=757721256219100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3a14f993}
2025-03-29 14:10:24 | TRACE | NettyWriteResponseFilter start inbound: 4b7ff408, outbound: [0bd3d752-1] 
2025-03-29 14:10:24 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=INTERNAL_SERVER_ERROR)]
2025-03-29 14:11:03 | TRACE | Weights attr: {}
2025-03-29 14:11:03 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-03-29 14:11:03 | DEBUG | Route matched: user-service-route
2025-03-29 14:11:03 | DEBUG | Mapping [Exchange: POST http://localhost:8080/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 14:11:03 | DEBUG | [0bd3d752-2] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@1324e70a
2025-03-29 14:11:03 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@e2f6a45}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@1cee3e05}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@77fb1002}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@434d001d}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@4db16677}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@24cbf894}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@6abb44cb}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@36453773}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@185a0811}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@6c19769c}, order = 2147483647]]
2025-03-29 14:11:03 | TRACE | RouteToRequestUrlFilter start
2025-03-29 14:11:03 | DEBUG | Will instrument the HTTP request headers [X-Forwarded-For:"203.0.113.50,0:0:0:0:0:0:0:1", Content-Type:"application/json", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"2caede4d-8cbd-4a8b-8531-6c5c23a2c4c2", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"69", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54878"", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:11:03 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@29ea9924', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.682E-4, duration(nanos)=168200.0, startTimeNanos=757761462647000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@272d6269} created for the request. New headers are [X-Forwarded-For:"203.0.113.50,0:0:0:0:0:0:0:1", Content-Type:"application/json", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"2caede4d-8cbd-4a8b-8531-6c5c23a2c4c2", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"69", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54878"", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:11:03 | TRACE | outbound route: e6fb3381, inbound: [0bd3d752-2] 
2025-03-29 14:11:03 | DEBUG | Will instrument the response
2025-03-29 14:11:03 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@29ea9924', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.4019445, duration(nanos)=4.019445E8, startTimeNanos=757761462647000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@272d6269}
2025-03-29 14:11:03 | TRACE | NettyWriteResponseFilter start inbound: e6fb3381, outbound: [0bd3d752-2] 
2025-03-29 14:11:03 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-03-29 14:11:09 | TRACE | Weights attr: {}
2025-03-29 14:11:09 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:11:09 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:11:09 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/create"
2025-03-29 14:11:09 | DEBUG | Route matched: account-service-route
2025-03-29 14:11:09 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/api/v1/create] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 14:11:09 | DEBUG | [0bd3d752-3] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@1324e70a
2025-03-29 14:11:09 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@e2f6a45}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@1cee3e05}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@77fb1002}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@434d001d}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@4db16677}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@24cbf894}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@6abb44cb}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@36453773}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@185a0811}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@6c19769c}, order = 2147483647]]
2025-03-29 14:11:09 | TRACE | RouteToRequestUrlFilter start
2025-03-29 14:11:09 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"414e8043-f040-408b-b19b-649be10de05a", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54878"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:11:09 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/create'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3b8ba24', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.435E-4, duration(nanos)=243500.0, startTimeNanos=757767523686000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@d7f4423} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMjIwMjIsImV4cCI6MTc0MzMwODQyMn0.zAS7hxgENETUKX624g-L1gxO8Cvv004pPa-Bhpmf7KE", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"414e8043-f040-408b-b19b-649be10de05a", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54878"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:11:09 | TRACE | outbound route: ee673016, inbound: [0bd3d752-3] 
2025-03-29 14:11:09 | DEBUG | Will instrument the response
2025-03-29 14:11:09 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/create'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3b8ba24', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0268091, duration(nanos)=2.68091E7, startTimeNanos=757767523686000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@d7f4423}
2025-03-29 14:11:09 | TRACE | NettyWriteResponseFilter start inbound: ee673016, outbound: [0bd3d752-3] 
2025-03-29 14:11:09 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=INTERNAL_SERVER_ERROR)]
2025-03-29 14:11:32 | TRACE | Weights attr: {}
2025-03-29 14:11:32 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:11:32 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:11:32 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/create"
2025-03-29 14:11:32 | DEBUG | Route matched: account-service-route
2025-03-29 14:11:32 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/api/v1/create] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 14:11:32 | DEBUG | [0bd3d752-4] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@1324e70a
2025-03-29 14:11:32 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@e2f6a45}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@1cee3e05}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@77fb1002}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@434d001d}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@4db16677}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@24cbf894}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@6abb44cb}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@36453773}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@185a0811}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@6c19769c}, order = 2147483647]]
2025-03-29 14:11:32 | TRACE | RouteToRequestUrlFilter start
2025-03-29 14:11:32 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"35bb32f8-3904-49f0-85bb-d0f26608b522", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54878"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:11:32 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/create'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4ec63e8b', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0013758, duration(nanos)=1375800.0, startTimeNanos=757790391431100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4001c923} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"35bb32f8-3904-49f0-85bb-d0f26608b522", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54878"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:11:32 | TRACE | outbound route: d5be3c24, inbound: [0bd3d752-4] 
2025-03-29 14:11:32 | DEBUG | Will instrument the response
2025-03-29 14:11:32 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/create'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4ec63e8b', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0363513, duration(nanos)=3.63513E7, startTimeNanos=757790391431100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4001c923}
2025-03-29 14:11:32 | TRACE | NettyWriteResponseFilter start inbound: d5be3c24, outbound: [0bd3d752-4] 
2025-03-29 14:11:32 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=INTERNAL_SERVER_ERROR)]
2025-03-29 14:19:47 | DEBUG | Stopped RedisMessageListenerContainer
2025-03-29 14:19:47 | INFO  | Commencing graceful shutdown. Waiting for active requests to complete
2025-03-29 14:19:47 | INFO  | Graceful shutdown complete
2025-03-29 14:19:47 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-03-29 14:19:47 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-03-29 14:19:47 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-03-29 14:27:08 | INFO  | HV000001: Hibernate Validator 8.0.2.Final
2025-03-29 14:27:09 | INFO  | Starting ApiGatewayApplication using Java 23.0.2 with PID 13260 (D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE\API-gateway\target\classes started by hiepg in D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE)
2025-03-29 14:27:09 | DEBUG | Running with Spring Boot v3.4.3, Spring v6.2.3
2025-03-29 14:27:09 | INFO  | The following 1 profile is active: "local"
2025-03-29 14:27:12 | TRACE | Condition GatewayAutoConfiguration.OnVerboseDisabledCondition on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration#gatewayLegacyControllerEndpoint did not match due to NoneNestedConditions 1 matched 0 did not; NestedCondition on GatewayAutoConfiguration.OnVerboseDisabledCondition.VerboseDisabled @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#routingFilter matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#nettyWriteResponseFilter matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyWebSocketClient matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyRequestUpgradeStrategy matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeCachedBodyFilter matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#routeToRequestUrlFilter matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardRoutingFilter matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardPathFilter matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#webSocketService matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#websocketRoutingFilter matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightCalculatorWebFilter matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#afterRoutePredicateFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#beforeRoutePredicateFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#betweenRoutePredicateFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cookieRoutePredicateFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#headerRoutePredicateFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#hostRoutePredicateFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#methodRoutePredicateFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#pathRoutePredicateFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#queryRoutePredicateFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#readBodyPredicateFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightRoutePredicateFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeadersIfNotPresentGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#redirectToGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeJsonAttributesResponseBodyGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#principalNameKeyResolver matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestRateLimiterGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#retryGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setPathGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setStatusGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched
2025-03-29 14:27:12 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteRequestParameterGatewayFilterFactory matched
2025-03-29 14:27:13 | INFO  | Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-29 14:27:13 | INFO  | Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-29 14:27:13 | INFO  | Finished Spring Data repository scanning in 41 ms. Found 0 Redis repository interfaces.
2025-03-29 14:27:14 | INFO  | BeanFactory id=278e83b6-d961-3f2d-9f24-8badf58b2fda
2025-03-29 14:27:16 | DEBUG | Starting with netty's non-blocking DNS resolver library
2025-03-29 14:27:16 | DEBUG | Starting without optional kqueue library
2025-03-29 14:27:16 | DEBUG | Starting without optional io_uring library
2025-03-29 14:27:16 | DEBUG | Starting without optional epoll library
2025-03-29 14:27:16 | DEBUG | -Dio.netty.eventLoopThreads: 4
2025-03-29 14:27:16 | DEBUG | Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-03-29 14:27:17 | DEBUG | Starting with JFR support
2025-03-29 14:27:18 | INFO  | 

Using generated security password: 2b6678e4-fae7-4594-a087-091a8a798687

2025-03-29 14:27:20 | DEBUG | Routes supplied from Gateway Properties: [RouteDefinition{id='user-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/users/**}}], filters=[], uri=http://localhost:8081, order=0, metadata={}, enabled=true}, RouteDefinition{id='wallet-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/wallets/**}}], filters=[], uri=http://localhost:8082, order=0, metadata={}, enabled=true}, RouteDefinition{id='account-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/accounts/**}}], filters=[], uri=http://localhost:8083, order=0, metadata={}, enabled=true}, RouteDefinition{id='trading-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/trading/**}}], filters=[], uri=http://localhost:8084, order=0, metadata={}, enabled=true}]
2025-03-29 14:27:21 | INFO  | Loaded RoutePredicateFactory [After]
2025-03-29 14:27:21 | INFO  | Loaded RoutePredicateFactory [Before]
2025-03-29 14:27:21 | INFO  | Loaded RoutePredicateFactory [Between]
2025-03-29 14:27:21 | INFO  | Loaded RoutePredicateFactory [Cookie]
2025-03-29 14:27:21 | INFO  | Loaded RoutePredicateFactory [Header]
2025-03-29 14:27:21 | INFO  | Loaded RoutePredicateFactory [Host]
2025-03-29 14:27:21 | INFO  | Loaded RoutePredicateFactory [Method]
2025-03-29 14:27:21 | INFO  | Loaded RoutePredicateFactory [Path]
2025-03-29 14:27:21 | INFO  | Loaded RoutePredicateFactory [Query]
2025-03-29 14:27:21 | INFO  | Loaded RoutePredicateFactory [ReadBody]
2025-03-29 14:27:21 | INFO  | Loaded RoutePredicateFactory [RemoteAddr]
2025-03-29 14:27:21 | INFO  | Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-03-29 14:27:21 | INFO  | Loaded RoutePredicateFactory [Weight]
2025-03-29 14:27:21 | INFO  | Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-03-29 14:27:22 | INFO  | Exposing 2 endpoints beneath base path '/actuator'
2025-03-29 14:27:23 | INFO  | Netty started on port 8080 (http)
2025-03-29 14:27:23 | DEBUG | Starting RedisMessageListenerContainer...
2025-03-29 14:27:23 | DEBUG | Postpone listening for Redis messages until actual listeners are added
2025-03-29 14:27:23 | DEBUG | RouteDefinition user-service-route applying {_genkey_0=/users/**} to Path
2025-03-29 14:27:23 | DEBUG | RouteDefinition matched: user-service-route
2025-03-29 14:27:23 | DEBUG | RouteDefinition wallet-service-route applying {_genkey_0=/wallets/**} to Path
2025-03-29 14:27:23 | DEBUG | RouteDefinition matched: wallet-service-route
2025-03-29 14:27:23 | DEBUG | RouteDefinition account-service-route applying {_genkey_0=/accounts/**} to Path
2025-03-29 14:27:23 | DEBUG | RouteDefinition matched: account-service-route
2025-03-29 14:27:23 | DEBUG | RouteDefinition trading-service-route applying {_genkey_0=/trading/**} to Path
2025-03-29 14:27:23 | DEBUG | RouteDefinition matched: trading-service-route
2025-03-29 14:27:23 | DEBUG | New routes count: 4
2025-03-29 14:27:23 | INFO  | Started ApiGatewayApplication in 17.314 seconds (process running for 23.774)
2025-03-29 14:27:24 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 14:27:25 | DEBUG | Allocating executor io.netty.channel.nio.NioEventLoopGroup
2025-03-29 14:27:25 | DEBUG | Creating executor io.netty.channel.nio.NioEventLoopGroup
2025-03-29 14:27:25 | DEBUG | Adding reference to io.netty.channel.nio.NioEventLoopGroup@6e1f63b4, existing ref count 0
2025-03-29 14:27:26 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 14:27:26 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-03-29 14:27:26 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 14:27:26 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 14:27:26 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-03-29 14:27:26 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 14:27:26 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 14:27:26 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-03-29 14:27:26 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 14:27:26 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 14:27:26 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-03-29 14:27:26 | DEBUG | [channel=0x0fb1f203, [id: 0x99f72d95] (inactive), epid=0x1, chid=0x1] channelRegistered()
2025-03-29 14:27:26 | DEBUG | [channel=0x3fd57ff5, [id: 0x49678d5b] (inactive), epid=0x4, chid=0x4] channelRegistered()
2025-03-29 14:27:26 | DEBUG | [channel=0x98326bfe, [id: 0xa6bdd9ae] (inactive), epid=0x2, chid=0x2] channelRegistered()
2025-03-29 14:27:26 | DEBUG | [channel=0x7d02b8c2, [id: 0xba3277ef] (inactive), epid=0x3, chid=0x3] channelRegistered()
2025-03-29 14:27:26 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 14:27:26 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 14:27:26 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:27:26 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:27:26 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 14:27:26 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:27:26 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 14:27:26 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:27:26 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Received: 705 bytes, 1 commands in the stack
2025-03-29 14:27:26 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Stack contains: 1 commands
2025-03-29 14:27:26 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 705 bytes, 1 commands in the stack
2025-03-29 14:27:26 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-03-29 14:27:26 | DEBUG | Decode done, empty stack: true
2025-03-29 14:27:26 | DEBUG | Decode done, empty stack: true
2025-03-29 14:27:26 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Received: 705 bytes, 1 commands in the stack
2025-03-29 14:27:26 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 1 commands
2025-03-29 14:27:26 | DEBUG | Decode done, empty stack: true
2025-03-29 14:27:26 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Received: 705 bytes, 1 commands in the stack
2025-03-29 14:27:26 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Stack contains: 1 commands
2025-03-29 14:27:26 | DEBUG | Decode done, empty stack: true
2025-03-29 14:27:26 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 14:27:26 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 14:27:26 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 14:27:26 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 14:27:26 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-03-29 14:27:26 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-03-29 14:27:26 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-03-29 14:27:26 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:27:26 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:27:26 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-03-29 14:27:26 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:27:26 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:27:26 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:27:26 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:27:26 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:27:26 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:27:27 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Received: 10 bytes, 2 commands in the stack
2025-03-29 14:27:27 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Stack contains: 2 commands
2025-03-29 14:27:27 | DEBUG | Decode done, empty stack: true
2025-03-29 14:27:27 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 14:27:27 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Stack contains: 1 commands
2025-03-29 14:27:27 | DEBUG | Decode done, empty stack: true
2025-03-29 14:27:27 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 14:27:27 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] channelActive()
2025-03-29 14:27:27 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-03-29 14:27:27 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] activating endpoint
2025-03-29 14:27:27 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] flushCommands()
2025-03-29 14:27:27 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] flushCommands() Flushing 0 commands
2025-03-29 14:27:27 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Received: 10 bytes, 2 commands in the stack
2025-03-29 14:27:27 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 2 commands
2025-03-29 14:27:27 | DEBUG | Decode done, empty stack: true
2025-03-29 14:27:27 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 14:27:27 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 1 commands
2025-03-29 14:27:27 | DEBUG | Decode done, empty stack: true
2025-03-29 14:27:27 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 14:27:27 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelActive()
2025-03-29 14:27:27 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-03-29 14:27:27 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] activating endpoint
2025-03-29 14:27:27 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] flushCommands()
2025-03-29 14:27:27 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] flushCommands() Flushing 0 commands
2025-03-29 14:27:27 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 10 bytes, 2 commands in the stack
2025-03-29 14:27:27 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-03-29 14:27:27 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-03-29 14:27:27 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelActive() done
2025-03-29 14:27:27 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] channelActive() done
2025-03-29 14:27:27 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694: Success
2025-03-29 14:27:27 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694: Success
2025-03-29 14:27:27 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 2 commands
2025-03-29 14:27:27 | DEBUG | Decode done, empty stack: true
2025-03-29 14:27:27 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 14:27:27 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-03-29 14:27:27 | DEBUG | Decode done, empty stack: true
2025-03-29 14:27:27 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 14:27:27 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive()
2025-03-29 14:27:27 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-03-29 14:27:27 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-03-29 14:27:27 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-03-29 14:27:27 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-03-29 14:27:27 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-03-29 14:27:27 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive() done
2025-03-29 14:27:27 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694: Success
2025-03-29 14:27:27 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Received: 10 bytes, 2 commands in the stack
2025-03-29 14:27:27 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Stack contains: 2 commands
2025-03-29 14:27:27 | DEBUG | Decode done, empty stack: true
2025-03-29 14:27:27 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 14:27:27 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Stack contains: 1 commands
2025-03-29 14:27:27 | DEBUG | Decode done, empty stack: true
2025-03-29 14:27:27 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 14:27:27 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] channelActive()
2025-03-29 14:27:27 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-03-29 14:27:27 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] activating endpoint
2025-03-29 14:27:27 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] flushCommands()
2025-03-29 14:27:27 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] flushCommands() Flushing 0 commands
2025-03-29 14:27:27 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-03-29 14:27:27 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] channelActive() done
2025-03-29 14:27:27 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694: Success
2025-03-29 14:27:27 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 14:27:27 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-03-29 14:27:27 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-03-29 14:27:27 | DEBUG | [channel=0xcc5828ec, [id: 0xd4192d0a] (inactive), epid=0x5, chid=0x5] channelRegistered()
2025-03-29 14:27:27 | DEBUG | dispatching command SubscriptionCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:27:27 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() writeAndFlush command SubscriptionCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:27:27 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] write(ctx, SubscriptionCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 14:27:27 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:27:27 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() done
2025-03-29 14:27:27 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-03-29 14:27:27 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:27:27 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Received: 7 bytes, 1 commands in the stack
2025-03-29 14:27:27 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 1 commands
2025-03-29 14:27:27 | DEBUG | Decode done, empty stack: true
2025-03-29 14:27:27 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-03-29 14:27:27 | DEBUG | Redis health check: PONG
2025-03-29 14:27:27 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Received: 705 bytes, 1 commands in the stack
2025-03-29 14:27:27 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Stack contains: 1 commands
2025-03-29 14:27:27 | DEBUG | Decode done, empty stack: true
2025-03-29 14:27:27 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 14:27:27 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-03-29 14:27:27 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:27:27 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-29 14:27:28 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Received: 10 bytes, 2 commands in the stack
2025-03-29 14:27:28 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Stack contains: 2 commands
2025-03-29 14:27:28 | DEBUG | Decode done, empty stack: true
2025-03-29 14:27:28 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 14:27:28 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Stack contains: 1 commands
2025-03-29 14:27:28 | DEBUG | Decode done, empty stack: true
2025-03-29 14:27:28 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-03-29 14:27:28 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] channelActive()
2025-03-29 14:27:28 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-03-29 14:27:28 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] activating endpoint
2025-03-29 14:27:28 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] flushCommands()
2025-03-29 14:27:28 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] flushCommands() Flushing 0 commands
2025-03-29 14:27:28 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-03-29 14:27:28 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] channelActive() done
2025-03-29 14:27:28 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694: Success
2025-03-29 14:30:19 | TRACE | Weights attr: {}
2025-03-29 14:30:19 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:30:19 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:30:19 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/create"
2025-03-29 14:30:19 | DEBUG | Route matched: account-service-route
2025-03-29 14:30:19 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/api/v1/create] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 14:30:19 | DEBUG | [9fcb59a1-1] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7305cfb1
2025-03-29 14:30:19 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@18ff1520}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@c1386b4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@798b36fd}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@434a8938}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@51cd2d2}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36120a8b}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5521407f}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@237cd264}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@4ec37a42}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@63d66761}, order = 2147483647]]
2025-03-29 14:30:19 | TRACE | RouteToRequestUrlFilter start
2025-03-29 14:30:20 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"5d2bfa41-7b21-43a2-a649-d3b361389563", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55156"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:30:20 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/create'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@34fb3c6d', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0225471, duration(nanos)=2.25471E7, startTimeNanos=758918125150700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@44e9a4c4} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"5d2bfa41-7b21-43a2-a649-d3b361389563", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55156"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:30:20 | TRACE | outbound route: 94e6e4ce, inbound: [9fcb59a1-1] 
2025-03-29 14:30:21 | DEBUG | Will instrument the response
2025-03-29 14:30:21 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/create'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@34fb3c6d', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.1052921, duration(nanos)=1.1052921E9, startTimeNanos=758918125150700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@44e9a4c4}
2025-03-29 14:30:21 | TRACE | NettyWriteResponseFilter start inbound: 94e6e4ce, outbound: [9fcb59a1-1] 
2025-03-29 14:30:21 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=INTERNAL_SERVER_ERROR)]
2025-03-29 14:36:57 | TRACE | Weights attr: {}
2025-03-29 14:36:57 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:36:57 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:36:57 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/create"
2025-03-29 14:36:57 | DEBUG | Route matched: account-service-route
2025-03-29 14:36:57 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/api/v1/create] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 14:36:57 | DEBUG | [1735abbd-2] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7305cfb1
2025-03-29 14:36:57 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@18ff1520}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@c1386b4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@798b36fd}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@434a8938}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@51cd2d2}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36120a8b}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5521407f}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@237cd264}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@4ec37a42}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@63d66761}, order = 2147483647]]
2025-03-29 14:36:57 | TRACE | RouteToRequestUrlFilter start
2025-03-29 14:36:57 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"3d3cbb01-d3ba-43e0-b61b-df73008cd064", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55259"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:36:57 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/create'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2b2c34cc', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.326E-4, duration(nanos)=232600.0, startTimeNanos=759315907589900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@25ebcfd9} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"3d3cbb01-d3ba-43e0-b61b-df73008cd064", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55259"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:36:57 | TRACE | outbound route: c697730e, inbound: [1735abbd-2] 
2025-03-29 14:37:00 | DEBUG | Will instrument the response
2025-03-29 14:37:00 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/create'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2b2c34cc', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.3294167, duration(nanos)=2.3294167E9, startTimeNanos=759315907589900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@25ebcfd9}
2025-03-29 14:37:00 | TRACE | NettyWriteResponseFilter start inbound: c697730e, outbound: [1735abbd-2] 
2025-03-29 14:37:00 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=INTERNAL_SERVER_ERROR)]
2025-03-29 14:43:22 | TRACE | Weights attr: {}
2025-03-29 14:43:22 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:43:22 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/create"
2025-03-29 14:43:22 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/create"
2025-03-29 14:43:22 | DEBUG | Route matched: account-service-route
2025-03-29 14:43:22 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/api/v1/create] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 14:43:22 | DEBUG | [08ccdb53-3] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7305cfb1
2025-03-29 14:43:22 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@18ff1520}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@c1386b4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@798b36fd}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@434a8938}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@51cd2d2}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36120a8b}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5521407f}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@237cd264}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@4ec37a42}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@63d66761}, order = 2147483647]]
2025-03-29 14:43:22 | TRACE | RouteToRequestUrlFilter start
2025-03-29 14:43:22 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"2b903662-b4ca-481e-900a-bf8a73ad9769", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55360"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:43:22 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/create'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@103897e7', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.678E-4, duration(nanos)=967800.0, startTimeNanos=759700415215000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1eff6b90} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"2b903662-b4ca-481e-900a-bf8a73ad9769", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"63", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55360"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:43:22 | TRACE | outbound route: 996cde2f, inbound: [08ccdb53-3] 
2025-03-29 14:43:26 | DEBUG | Will instrument the response
2025-03-29 14:43:26 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/create'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@103897e7', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=3.8149858, duration(nanos)=3.8149858E9, startTimeNanos=759700415215000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1eff6b90}
2025-03-29 14:43:26 | TRACE | NettyWriteResponseFilter start inbound: 996cde2f, outbound: [08ccdb53-3] 
2025-03-29 14:43:26 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-03-29 14:49:38 | TRACE | Weights attr: {}
2025-03-29 14:49:38 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/67e7a49c2d17777178ad0164"
2025-03-29 14:49:38 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/67e7a49c2d17777178ad0164"
2025-03-29 14:49:38 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/67e7a49c2d17777178ad0164"
2025-03-29 14:49:38 | DEBUG | Route matched: account-service-route
2025-03-29 14:49:38 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/api/v1/67e7a49c2d17777178ad0164] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 14:49:38 | DEBUG | [399f7987-4] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7305cfb1
2025-03-29 14:49:38 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@18ff1520}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@c1386b4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@798b36fd}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@434a8938}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@51cd2d2}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36120a8b}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5521407f}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@237cd264}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@4ec37a42}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@63d66761}, order = 2147483647]]
2025-03-29 14:49:38 | TRACE | RouteToRequestUrlFilter start
2025-03-29 14:49:38 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"db7ace80-241e-4aba-ac73-6491781466fa", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55463"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:49:38 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/67e7a49c2d17777178ad0164'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2b76471d', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.641E-4, duration(nanos)=164100.0, startTimeNanos=760076888262600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6e74dc17} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"db7ace80-241e-4aba-ac73-6491781466fa", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55463"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 14:49:38 | TRACE | outbound route: 275b42ed, inbound: [399f7987-4] 
2025-03-29 14:49:39 | DEBUG | Will instrument the response
2025-03-29 14:49:39 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/67e7a49c2d17777178ad0164'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2b76471d', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.5007963, duration(nanos)=5.007963E8, startTimeNanos=760076888262600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6e74dc17}
2025-03-29 14:49:39 | TRACE | NettyWriteResponseFilter start inbound: 275b42ed, outbound: [399f7987-4] 
2025-03-29 14:49:39 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-03-29 15:15:50 | TRACE | Weights attr: {}
2025-03-29 15:15:50 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/67e7a49c2d17777178ad0164"
2025-03-29 15:15:50 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/67e7a49c2d17777178ad0164"
2025-03-29 15:15:50 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/67e7a49c2d17777178ad0164"
2025-03-29 15:15:50 | DEBUG | Route matched: account-service-route
2025-03-29 15:15:50 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/api/v1/67e7a49c2d17777178ad0164] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 15:15:50 | DEBUG | [4606b827-5] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7305cfb1
2025-03-29 15:15:50 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@18ff1520}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@c1386b4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@798b36fd}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@434a8938}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@51cd2d2}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36120a8b}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5521407f}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@237cd264}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@4ec37a42}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@63d66761}, order = 2147483647]]
2025-03-29 15:15:50 | TRACE | RouteToRequestUrlFilter start
2025-03-29 15:15:50 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"997595fd-9284-413c-bd9b-667d8786c47b", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55639"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 15:15:50 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/67e7a49c2d17777178ad0164'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@17fd848', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.681E-4, duration(nanos)=168100.0, startTimeNanos=761648956801400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@57db8353} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"997595fd-9284-413c-bd9b-667d8786c47b", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55639"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 15:15:50 | TRACE | outbound route: 1ebcab88, inbound: [4606b827-5] 
2025-03-29 15:15:52 | DEBUG | Will instrument the response
2025-03-29 15:15:52 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/67e7a49c2d17777178ad0164'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@17fd848', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.4312829, duration(nanos)=1.4312829E9, startTimeNanos=761648956801400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@57db8353}
2025-03-29 15:15:52 | TRACE | NettyWriteResponseFilter start inbound: 1ebcab88, outbound: [4606b827-5] 
2025-03-29 15:15:52 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-03-29 15:17:42 | TRACE | Weights attr: {}
2025-03-29 15:17:42 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/get"
2025-03-29 15:17:42 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/get"
2025-03-29 15:17:42 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/get"
2025-03-29 15:17:42 | DEBUG | Route matched: account-service-route
2025-03-29 15:17:42 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 15:17:42 | DEBUG | [a3a247dd-6] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7305cfb1
2025-03-29 15:17:42 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@18ff1520}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@c1386b4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@798b36fd}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@434a8938}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@51cd2d2}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36120a8b}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5521407f}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@237cd264}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@4ec37a42}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@63d66761}, order = 2147483647]]
2025-03-29 15:17:42 | TRACE | RouteToRequestUrlFilter start
2025-03-29 15:17:42 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"eb83de17-eb28-43cf-835d-236cfebb2de2", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55669"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 15:17:42 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2e1607e0', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.791E-4, duration(nanos)=179100.0, startTimeNanos=761760537923400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@557880fc} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"eb83de17-eb28-43cf-835d-236cfebb2de2", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55669"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 15:17:42 | TRACE | outbound route: 138b6f91, inbound: [a3a247dd-6] 
2025-03-29 15:17:42 | DEBUG | Will instrument the response
2025-03-29 15:17:42 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2e1607e0', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1330229, duration(nanos)=1.330229E8, startTimeNanos=761760537923400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@557880fc}
2025-03-29 15:17:42 | TRACE | NettyWriteResponseFilter start inbound: 138b6f91, outbound: [a3a247dd-6] 
2025-03-29 15:17:42 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-03-29 15:20:46 | TRACE | Weights attr: {}
2025-03-29 15:20:46 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/get"
2025-03-29 15:20:46 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/get"
2025-03-29 15:20:46 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/get"
2025-03-29 15:20:46 | DEBUG | Route matched: account-service-route
2025-03-29 15:20:46 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 15:20:46 | DEBUG | [b38b082c-7] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7305cfb1
2025-03-29 15:20:46 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@18ff1520}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@c1386b4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@798b36fd}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@434a8938}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@51cd2d2}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36120a8b}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5521407f}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@237cd264}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@4ec37a42}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@63d66761}, order = 2147483647]]
2025-03-29 15:20:46 | TRACE | RouteToRequestUrlFilter start
2025-03-29 15:20:46 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"cafcfdcc-3f99-474e-b381-ecd8816da1fb", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55713"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 15:20:46 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@b91521b', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.762E-4, duration(nanos)=176200.0, startTimeNanos=761944731427500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6e571b12} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"cafcfdcc-3f99-474e-b381-ecd8816da1fb", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55713"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 15:20:46 | TRACE | outbound route: 51704bf5, inbound: [b38b082c-7] 
2025-03-29 15:21:01 | DEBUG | Will instrument the response
2025-03-29 15:21:01 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@b91521b', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=14.5220588, duration(nanos)=1.45220588E10, startTimeNanos=761944731427500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6e571b12}
2025-03-29 15:21:01 | TRACE | NettyWriteResponseFilter start inbound: 51704bf5, outbound: [b38b082c-7] 
2025-03-29 15:21:01 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-03-29 15:21:13 | TRACE | Weights attr: {}
2025-03-29 15:21:13 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/get"
2025-03-29 15:21:13 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/get"
2025-03-29 15:21:13 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/get"
2025-03-29 15:21:13 | DEBUG | Route matched: account-service-route
2025-03-29 15:21:13 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 15:21:13 | DEBUG | [b38b082c-8] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7305cfb1
2025-03-29 15:21:13 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@18ff1520}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@c1386b4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@798b36fd}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@434a8938}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@51cd2d2}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36120a8b}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5521407f}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@237cd264}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@4ec37a42}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@63d66761}, order = 2147483647]]
2025-03-29 15:21:13 | TRACE | RouteToRequestUrlFilter start
2025-03-29 15:21:13 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"bc2ec85c-906a-445c-9eba-55d433e4f513", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55713"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 15:21:13 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7b20448b', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.528E-4, duration(nanos)=152800.0, startTimeNanos=761971834574100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@25a3aff5} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"bc2ec85c-906a-445c-9eba-55d433e4f513", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55713"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 15:21:13 | TRACE | outbound route: 51704bf5, inbound: [b38b082c-8] 
2025-03-29 15:21:38 | DEBUG | Will instrument the response
2025-03-29 15:21:38 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7b20448b', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=25.1346137, duration(nanos)=2.51346137E10, startTimeNanos=761971834574100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@25a3aff5}
2025-03-29 15:21:38 | TRACE | NettyWriteResponseFilter start inbound: 51704bf5, outbound: [b38b082c-8] 
2025-03-29 15:21:38 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-03-29 15:21:50 | TRACE | Weights attr: {}
2025-03-29 15:21:50 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/get"
2025-03-29 15:21:50 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/get"
2025-03-29 15:21:50 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/get"
2025-03-29 15:21:50 | DEBUG | Route matched: account-service-route
2025-03-29 15:21:50 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 15:21:50 | DEBUG | [b38b082c-9] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7305cfb1
2025-03-29 15:21:50 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@18ff1520}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@c1386b4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@798b36fd}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@434a8938}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@51cd2d2}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36120a8b}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5521407f}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@237cd264}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@4ec37a42}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@63d66761}, order = 2147483647]]
2025-03-29 15:21:50 | TRACE | RouteToRequestUrlFilter start
2025-03-29 15:21:50 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"ca627a2e-d7d6-48d0-a35f-6027161584ad", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55713"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 15:21:50 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@10567545', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.367E-4, duration(nanos)=136700.0, startTimeNanos=762008121792400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1b9cad07} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"ca627a2e-d7d6-48d0-a35f-6027161584ad", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55713"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 15:21:50 | TRACE | outbound route: 51704bf5, inbound: [b38b082c-9] 
2025-03-29 15:25:25 | DEBUG | Will instrument the response
2025-03-29 15:25:25 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@10567545', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=214.9776536, duration(nanos)=2.149776536E11, startTimeNanos=762008121792400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1b9cad07}
2025-03-29 15:25:25 | TRACE | NettyWriteResponseFilter start inbound: 51704bf5, outbound: [b38b082c-9] 
2025-03-29 15:25:25 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-03-29 15:28:43 | TRACE | Weights attr: {}
2025-03-29 15:28:43 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/get"
2025-03-29 15:28:43 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/get"
2025-03-29 15:28:43 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/get"
2025-03-29 15:28:43 | DEBUG | Route matched: account-service-route
2025-03-29 15:28:43 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 15:28:43 | DEBUG | [cc578b12-10] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7305cfb1
2025-03-29 15:28:43 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@18ff1520}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@c1386b4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@798b36fd}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@434a8938}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@51cd2d2}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36120a8b}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5521407f}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@237cd264}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@4ec37a42}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@63d66761}, order = 2147483647]]
2025-03-29 15:28:43 | TRACE | RouteToRequestUrlFilter start
2025-03-29 15:28:43 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"c0315d27-a9b8-4b75-8e59-2a26038bb274", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55953"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 15:28:43 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1ace14d5', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.452E-4, duration(nanos)=145200.0, startTimeNanos=762421430510000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@b200810} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"c0315d27-a9b8-4b75-8e59-2a26038bb274", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55953"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 15:28:43 | TRACE | outbound route: 23dd48e0, inbound: [cc578b12-10] 
2025-03-29 15:29:00 | DEBUG | Will instrument the response
2025-03-29 15:29:00 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1ace14d5', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=16.6413801, duration(nanos)=1.66413801E10, startTimeNanos=762421430510000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@b200810}
2025-03-29 15:29:00 | TRACE | NettyWriteResponseFilter start inbound: 23dd48e0, outbound: [cc578b12-10] 
2025-03-29 15:29:00 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-03-29 15:32:58 | TRACE | Weights attr: {}
2025-03-29 15:32:58 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/get"
2025-03-29 15:32:58 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/get"
2025-03-29 15:32:58 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/get"
2025-03-29 15:32:58 | DEBUG | Route matched: account-service-route
2025-03-29 15:32:58 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 15:32:58 | DEBUG | [f1f9735b-11] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7305cfb1
2025-03-29 15:32:58 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@18ff1520}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@c1386b4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@798b36fd}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@434a8938}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@51cd2d2}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36120a8b}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5521407f}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@237cd264}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@4ec37a42}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@63d66761}, order = 2147483647]]
2025-03-29 15:32:58 | TRACE | RouteToRequestUrlFilter start
2025-03-29 15:32:58 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"92342f69-e33f-40fa-ac7f-d52832b6898c", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55992"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 15:32:58 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3e6d1288', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0012439, duration(nanos)=1243900.0, startTimeNanos=762677009659400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@683401dc} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"92342f69-e33f-40fa-ac7f-d52832b6898c", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55992"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 15:32:58 | TRACE | outbound route: e17012e7, inbound: [f1f9735b-11] 
2025-03-29 15:33:09 | DEBUG | Will instrument the response
2025-03-29 15:33:09 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3e6d1288', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=10.0995378, duration(nanos)=1.00995378E10, startTimeNanos=762677009659400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@683401dc}
2025-03-29 15:33:09 | TRACE | NettyWriteResponseFilter start inbound: e17012e7, outbound: [f1f9735b-11] 
2025-03-29 15:33:09 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-03-29 15:44:33 | TRACE | Weights attr: {}
2025-03-29 15:44:33 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/67e7a49c2d17777178ad0164/update"
2025-03-29 15:44:33 | TRACE | Pattern "[/wallets/**]" does not match against value "/accounts/api/v1/67e7a49c2d17777178ad0164/update"
2025-03-29 15:44:33 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/67e7a49c2d17777178ad0164/update"
2025-03-29 15:44:33 | DEBUG | Route matched: account-service-route
2025-03-29 15:44:33 | DEBUG | Mapping [Exchange: PUT http://localhost:8080/accounts/api/v1/67e7a49c2d17777178ad0164/update?nickname=TEST] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-03-29 15:44:33 | DEBUG | [1ee56af6-12] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7305cfb1
2025-03-29 15:44:33 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@18ff1520}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@c1386b4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@798b36fd}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@434a8938}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@51cd2d2}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36120a8b}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5521407f}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@237cd264}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@4ec37a42}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@63d66761}, order = 2147483647]]
2025-03-29 15:44:33 | TRACE | RouteToRequestUrlFilter start
2025-03-29 15:44:34 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"695f20aa-d848-4445-931c-a1dfb8dfff3d", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"10", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56106"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 15:44:34 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='PUT', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/67e7a49c2d17777178ad0164/update?nickname=TEST'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@948b208', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.237E-4, duration(nanos)=223700.0, startTimeNanos=763372291839500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@29b0a25a} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDMyMzIyNjMsImV4cCI6MTc0MzMxODY2M30.Pchyj2uCE6IfvrG1gq08lWJu7FYb_77j4qfZjldwLwA", User-Agent:"PostmanRuntime/7.43.2", Accept:"*/*", Postman-Token:"695f20aa-d848-4445-931c-a1dfb8dfff3d", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"10", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56106"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-03-29 15:44:34 | TRACE | outbound route: 02d509c1, inbound: [1ee56af6-12] 
2025-03-29 15:44:34 | DEBUG | Will instrument the response
2025-03-29 15:44:34 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='PUT', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/67e7a49c2d17777178ad0164/update?nickname=TEST'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@948b208', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.4114607, duration(nanos)=4.114607E8, startTimeNanos=763372291839500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@29b0a25a}
2025-03-29 15:44:34 | TRACE | NettyWriteResponseFilter start inbound: 02d509c1, outbound: [1ee56af6-12] 
2025-03-29 15:44:34 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=PUT),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-03-29 16:47:58 | DEBUG | Stopped RedisMessageListenerContainer
2025-03-29 16:47:59 | INFO  | Commencing graceful shutdown. Waiting for active requests to complete
2025-03-29 16:48:01 | INFO  | Graceful shutdown complete
2025-03-29 16:48:04 | WARN  | LettucePoolingConnectionProvider contains unreleased connections
2025-03-29 16:48:04 | DEBUG | closeAsync()
2025-03-29 16:48:04 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] closeAsync()
2025-03-29 16:48:04 | DEBUG | closeAsync()
2025-03-29 16:48:04 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] closeAsync()
2025-03-29 16:48:04 | DEBUG | closeAsync()
2025-03-29 16:48:04 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] closeAsync()
2025-03-29 16:48:04 | DEBUG | closeAsync()
2025-03-29 16:48:04 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] closeAsync()
2025-03-29 16:48:04 | DEBUG | closeAsync()
2025-03-29 16:48:04 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] closeAsync()
2025-03-29 16:48:05 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] channelInactive()
2025-03-29 16:48:05 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] channelInactive()
2025-03-29 16:48:05 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive()
2025-03-29 16:48:05 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelInactive()
2025-03-29 16:48:05 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] deactivating endpoint handler
2025-03-29 16:48:05 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3] deactivating endpoint handler
2025-03-29 16:48:05 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-03-29 16:48:05 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4] deactivating endpoint handler
2025-03-29 16:48:05 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelInactive() done
2025-03-29 16:48:05 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive() done
2025-03-29 16:48:05 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] channelInactive() done
2025-03-29 16:48:05 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] channelInactive() done
2025-03-29 16:48:05 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-03-29 16:48:05 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-03-29 16:48:05 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-03-29 16:48:05 | DEBUG | [channel=0x98326bfe, /192.168.102.3:55096 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelUnregistered()
2025-03-29 16:48:05 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-03-29 16:48:05 | DEBUG | [channel=0x3fd57ff5, /192.168.102.3:55097 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x4, chid=0x4] channelUnregistered()
2025-03-29 16:48:05 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-03-29 16:48:05 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-03-29 16:48:05 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-03-29 16:48:05 | DEBUG | [channel=0x7d02b8c2, /192.168.102.3:55095 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x3, chid=0x3] channelUnregistered()
2025-03-29 16:48:05 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-03-29 16:48:05 | DEBUG | [channel=0x0fb1f203, /192.168.102.3:55098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelUnregistered()
2025-03-29 16:48:05 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] channelInactive()
2025-03-29 16:48:05 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5] deactivating endpoint handler
2025-03-29 16:48:05 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] channelInactive() done
2025-03-29 16:48:05 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-03-29 16:48:05 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-03-29 16:48:05 | DEBUG | [channel=0xcc5828ec, /192.168.102.3:55100 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x5, chid=0x5] channelUnregistered()
2025-03-29 16:48:05 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-03-29 16:48:05 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-03-29 16:48:05 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-03-29 16:48:05 | DEBUG | Release executor io.netty.channel.nio.NioEventLoopGroup@6e1f63b4
